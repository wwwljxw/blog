2021-03-29 02:04:28.049  INFO 7824 --- [restartedMain] com.ljx.blog.BlogApplication             : Starting BlogApplication using Java 1.8.0_271 on W10-20201212464 with PID 7824 (D:\UserData\Desktop\project\get-projiect\blog\target\classes started by Lin in D:\UserData\Desktop\project\get-projiect\blog)
2021-03-29 02:04:28.063  INFO 7824 --- [restartedMain] com.ljx.blog.BlogApplication             : The following profiles are active: dev
2021-03-29 02:04:28.119  INFO 7824 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-03-29 02:04:28.120  INFO 7824 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-03-29 02:04:29.192  INFO 7824 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration$$EnhancerBySpringCGLIB$$6a148ec5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:04:29.206  INFO 7824 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration$$EnhancerBySpringCGLIB$$6ca7cd6a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:04:29.391  INFO 7824 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'shiroConfig' of type [com.ljx.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$8d979c2c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:04:29.488  INFO 7824 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:04:29.497  INFO 7824 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$89d00245] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:04:29.504  INFO 7824 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$70a7a687] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:04:29.507  INFO 7824 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-03-29 02:04:29.560  INFO 7824 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:04:29.569  INFO 7824 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:04:29.589  INFO 7824 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:04:29.700  INFO 7824 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'wallConfig' of type [com.alibaba.druid.wall.WallConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:04:29.715  INFO 7824 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'wallFilter' of type [com.alibaba.druid.wall.WallFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:04:29.833  INFO 7824 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-03-29 02:04:29.843  INFO 7824 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:04:29.882  INFO 7824 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:04:30.230  INFO 7824 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:04:30.238  INFO 7824 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:04:30.243  INFO 7824 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:04:30.247  INFO 7824 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userDao' of type [com.sun.proxy.$Proxy80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:04:30.255  INFO 7824 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userServiceImpl' of type [com.ljx.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:04:30.256  INFO 7824 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'getRealm' of type [com.ljx.blog.config.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:04:31.079  INFO 7824 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'defaultWebSecurityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:04:31.112  INFO 7824 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:04:31.142  INFO 7824 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'eventBus' of type [org.apache.shiro.event.support.DefaultEventBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:04:31.708  INFO 7824 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-03-29 02:04:31.718  INFO 7824 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-03-29 02:04:31.718  INFO 7824 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.43]
2021-03-29 02:04:31.829  INFO 7824 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-03-29 02:04:31.829  INFO 7824 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3708 ms
2021-03-29 02:04:32.955  INFO 7824 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-03-29 02:04:33.024  INFO 7824 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-03-29 02:04:33.065  INFO 7824 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-03-29 02:04:33.581  INFO 7824 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-03-29 02:04:33.880  INFO 7824 --- [restartedMain] com.ljx.blog.BlogApplication             : Started BlogApplication in 6.499 seconds (JVM running for 9.058)
2021-03-29 02:04:33.932  INFO 7824 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-03-29 02:04:33.932  INFO 7824 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-03-29 02:04:33.935  INFO 7824 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2021-03-29 02:04:33.976  INFO 7824 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.IndexController.index, args=[])
2021-03-29 02:04:33.980  INFO 7824 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Result: index
2021-03-29 02:04:38.707  INFO 7824 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.UserController.getLogin, args=[])
2021-03-29 02:04:38.710  INFO 7824 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Result: admin/login
2021-03-29 02:04:45.193  INFO 7824 --- [http-nio-8080-exec-7] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/login, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.UserController.login, args=[linjx, 1111, {}])
2021-03-29 02:04:45.878  INFO 7824 --- [http-nio-8080-exec-7] com.ljx.blog.config.LogConfig            : Result: admin/index
2021-03-29 02:04:51.671  INFO 7824 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getBlogs, args=[1, {}])
2021-03-29 02:04:51.726  INFO 7824 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Result: admin/blogs
2021-03-29 02:04:53.318  INFO 7824 --- [http-nio-8080-exec-2] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/2/input, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getUpdateBlog, args=[2, {}])
2021-03-29 02:04:53.336  INFO 7824 --- [http-nio-8080-exec-2] com.ljx.blog.config.LogConfig            : Result: admin/blogs-input
2021-03-29 02:07:03.112  INFO 7824 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/2/input, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getUpdateBlog, args=[2, {}])
2021-03-29 02:07:03.122  WARN 7824 --- [http-nio-8080-exec-1] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/myblog?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8, version : 1.2.4, lastPacketReceivedIdleMillis : 129780
2021-03-29 02:07:03.165  INFO 7824 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Result: admin/blogs-input
2021-03-29 02:07:15.688  INFO 7824 --- [http-nio-8080-exec-2] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/5/input, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getUpdateBlog, args=[5, {}])
2021-03-29 02:07:15.696  INFO 7824 --- [http-nio-8080-exec-2] com.ljx.blog.config.LogConfig            : Result: admin/blogs-input
2021-03-29 02:07:25.246  INFO 7824 --- [http-nio-8080-exec-8] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getBlogs, args=[1, {}])
2021-03-29 02:07:25.259  INFO 7824 --- [http-nio-8080-exec-8] com.ljx.blog.config.LogConfig            : Result: admin/blogs
2021-03-29 02:09:40.852  INFO 7824 --- [http-nio-8080-exec-10] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getBlogs, args=[1, {}])
2021-03-29 02:09:40.856  WARN 7824 --- [http-nio-8080-exec-10] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/myblog?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8, version : 1.2.4, lastPacketReceivedIdleMillis : 135599
2021-03-29 02:09:40.887  INFO 7824 --- [http-nio-8080-exec-10] com.ljx.blog.config.LogConfig            : Result: admin/blogs
2021-03-29 02:09:46.911  INFO 7824 --- [http-nio-8080-exec-4] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/types, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.TypeController.getType, args=[1, {}])
2021-03-29 02:09:46.924  INFO 7824 --- [http-nio-8080-exec-4] com.ljx.blog.config.LogConfig            : Result: admin/types
2021-03-29 02:09:48.106  INFO 7824 --- [http-nio-8080-exec-9] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getBlogs, args=[1, {}])
2021-03-29 02:09:48.118  INFO 7824 --- [http-nio-8080-exec-9] com.ljx.blog.config.LogConfig            : Result: admin/blogs
2021-03-29 02:13:32.608  INFO 7824 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2021-03-29 02:13:32.611  INFO 7824 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closing ...
2021-03-29 02:13:32.614  INFO 7824 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2021-03-29 02:13:53.537  INFO 7576 --- [restartedMain] com.ljx.blog.BlogApplication             : Starting BlogApplication using Java 1.8.0_271 on W10-20201212464 with PID 7576 (D:\UserData\Desktop\project\get-projiect\blog\target\classes started by Lin in D:\UserData\Desktop\project\get-projiect\blog)
2021-03-29 02:13:53.539  INFO 7576 --- [restartedMain] com.ljx.blog.BlogApplication             : The following profiles are active: dev
2021-03-29 02:13:53.591  INFO 7576 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-03-29 02:13:53.591  INFO 7576 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-03-29 02:13:54.561  INFO 7576 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration$$EnhancerBySpringCGLIB$$6d2c28ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:13:54.571  INFO 7576 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration$$EnhancerBySpringCGLIB$$6fbf676f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:13:54.724  INFO 7576 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'shiroConfig' of type [com.ljx.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$90af3631] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:13:54.807  INFO 7576 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:13:54.816  INFO 7576 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8ce79c4a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:13:54.822  INFO 7576 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$73bf408c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:13:54.824  INFO 7576 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-03-29 02:13:54.871  INFO 7576 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:13:54.879  INFO 7576 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:13:54.897  INFO 7576 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:13:55.003  INFO 7576 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'wallConfig' of type [com.alibaba.druid.wall.WallConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:13:55.015  INFO 7576 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'wallFilter' of type [com.alibaba.druid.wall.WallFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:13:55.109  INFO 7576 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-03-29 02:13:55.110  INFO 7576 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:13:55.149  INFO 7576 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:13:55.303  INFO 7576 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:13:55.308  INFO 7576 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:13:55.314  INFO 7576 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:13:55.316  INFO 7576 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userDao' of type [com.sun.proxy.$Proxy80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:13:55.322  INFO 7576 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userServiceImpl' of type [com.ljx.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:13:55.322  INFO 7576 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'getRealm' of type [com.ljx.blog.config.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:13:56.014  INFO 7576 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'defaultWebSecurityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:13:56.031  INFO 7576 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:13:56.044  INFO 7576 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'eventBus' of type [org.apache.shiro.event.support.DefaultEventBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 02:13:56.306  INFO 7576 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-03-29 02:13:56.316  INFO 7576 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-03-29 02:13:56.316  INFO 7576 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.43]
2021-03-29 02:13:56.398  INFO 7576 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-03-29 02:13:56.398  INFO 7576 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2805 ms
2021-03-29 02:13:57.445  INFO 7576 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-03-29 02:13:57.512  INFO 7576 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-03-29 02:13:57.551  INFO 7576 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-03-29 02:13:58.046  INFO 7576 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-03-29 02:13:58.288  INFO 7576 --- [restartedMain] com.ljx.blog.BlogApplication             : Started BlogApplication in 5.205 seconds (JVM running for 8.13)
2021-03-29 02:14:06.346  INFO 7576 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-03-29 02:14:06.347  INFO 7576 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-03-29 02:14:06.349  INFO 7576 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2021-03-29 02:14:06.401  INFO 7576 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.IndexController.index, args=[])
2021-03-29 02:14:06.407  INFO 7576 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Result: index
2021-03-29 02:14:08.505  INFO 7576 --- [http-nio-8080-exec-6] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.UserController.getLogin, args=[])
2021-03-29 02:14:08.509  INFO 7576 --- [http-nio-8080-exec-6] com.ljx.blog.config.LogConfig            : Result: admin/login
2021-03-29 02:14:12.809  INFO 7576 --- [http-nio-8080-exec-8] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/login, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.UserController.login, args=[linjx, 1111, {}])
2021-03-29 02:14:13.488  INFO 7576 --- [http-nio-8080-exec-8] com.ljx.blog.config.LogConfig            : Result: admin/index
2021-03-29 02:14:15.273  INFO 7576 --- [http-nio-8080-exec-6] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getBlogs, args=[1, {}])
2021-03-29 02:14:15.333  INFO 7576 --- [http-nio-8080-exec-6] com.ljx.blog.config.LogConfig            : Result: admin/blogs
2021-03-29 02:14:27.842  INFO 7576 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getBlogs, args=[1, {}])
2021-03-29 02:14:27.852  INFO 7576 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Result: admin/blogs
2021-03-29 02:14:33.938  INFO 7576 --- [http-nio-8080-exec-2] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getBlogs, args=[1, {}])
2021-03-29 02:14:33.946  INFO 7576 --- [http-nio-8080-exec-2] com.ljx.blog.config.LogConfig            : Result: admin/blogs
2021-03-29 02:15:09.774  INFO 7576 --- [http-nio-8080-exec-3] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/3/input, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getUpdateBlog, args=[3, {}])
2021-03-29 02:15:09.789  INFO 7576 --- [http-nio-8080-exec-3] com.ljx.blog.config.LogConfig            : Result: admin/blogs-input
2021-03-29 02:15:29.110  INFO 7576 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2021-03-29 02:15:29.114  INFO 7576 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closing ...
2021-03-29 02:15:29.116  INFO 7576 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2021-03-29 14:30:28.807  INFO 14804 --- [restartedMain] com.ljx.blog.BlogApplication             : Starting BlogApplication using Java 1.8.0_271 on W10-20201212464 with PID 14804 (D:\UserData\Desktop\project\get-projiect\blog\target\classes started by Lin in D:\UserData\Desktop\project\get-projiect\blog)
2021-03-29 14:30:28.836  INFO 14804 --- [restartedMain] com.ljx.blog.BlogApplication             : The following profiles are active: dev
2021-03-29 14:30:28.934  INFO 14804 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-03-29 14:30:28.934  INFO 14804 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-03-29 14:30:30.512  INFO 14804 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration$$EnhancerBySpringCGLIB$$221777ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 14:30:30.522  INFO 14804 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration$$EnhancerBySpringCGLIB$$24aab68f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 14:30:30.788  INFO 14804 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'shiroConfig' of type [com.ljx.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$459a8551] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 14:30:30.954  INFO 14804 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 14:30:30.962  INFO 14804 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$41d2eb6a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 14:30:30.968  INFO 14804 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$28aa8fac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 14:30:30.970  INFO 14804 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-03-29 14:30:31.056  INFO 14804 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 14:30:31.066  INFO 14804 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 14:30:31.091  INFO 14804 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 14:30:31.259  INFO 14804 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'wallConfig' of type [com.alibaba.druid.wall.WallConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 14:30:31.273  INFO 14804 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'wallFilter' of type [com.alibaba.druid.wall.WallFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 14:30:31.454  INFO 14804 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-03-29 14:30:31.454  INFO 14804 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 14:30:31.491  INFO 14804 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 14:30:31.716  INFO 14804 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 14:30:31.721  INFO 14804 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 14:30:31.726  INFO 14804 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 14:30:31.730  INFO 14804 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userDao' of type [com.sun.proxy.$Proxy80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 14:30:31.735  INFO 14804 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userServiceImpl' of type [com.ljx.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 14:30:31.736  INFO 14804 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'getRealm' of type [com.ljx.blog.config.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 14:30:32.385  INFO 14804 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'defaultWebSecurityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 14:30:32.401  INFO 14804 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 14:30:32.415  INFO 14804 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'eventBus' of type [org.apache.shiro.event.support.DefaultEventBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 14:30:32.933  INFO 14804 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-03-29 14:30:32.951  INFO 14804 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-03-29 14:30:32.952  INFO 14804 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.43]
2021-03-29 14:30:33.037  INFO 14804 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-03-29 14:30:33.038  INFO 14804 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4103 ms
2021-03-29 14:30:34.066  INFO 14804 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-03-29 14:30:34.136  INFO 14804 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-03-29 14:30:34.177  INFO 14804 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-03-29 14:30:34.779  INFO 14804 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-03-29 14:30:35.066  INFO 14804 --- [restartedMain] com.ljx.blog.BlogApplication             : Started BlogApplication in 7.15 seconds (JVM running for 10.731)
2021-03-29 14:31:08.900  INFO 14804 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-03-29 14:31:08.900  INFO 14804 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-03-29 14:31:08.901  INFO 14804 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-03-29 14:31:08.951  INFO 14804 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.IndexController.index, args=[])
2021-03-29 14:31:08.955  INFO 14804 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Result: index
2021-03-29 14:37:49.480  INFO 14804 --- [http-nio-8080-exec-3] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.UserController.getLogin, args=[])
2021-03-29 14:37:49.490  INFO 14804 --- [http-nio-8080-exec-3] com.ljx.blog.config.LogConfig            : Result: admin/login
2021-03-29 14:37:54.726  INFO 14804 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/login, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.UserController.login, args=[linjx, 1111, {}])
2021-03-29 14:37:55.705  INFO 14804 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Result: admin/index
2021-03-29 14:37:57.280  INFO 14804 --- [http-nio-8080-exec-3] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getBlogs, args=[1, {}])
2021-03-29 14:37:57.381  INFO 14804 --- [http-nio-8080-exec-3] com.ljx.blog.config.LogConfig            : Result: admin/blogs
2021-03-29 14:49:56.310  INFO 14804 --- [http-nio-8080-exec-7] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/2/input, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getUpdateBlog, args=[2, {}])
2021-03-29 14:49:56.328  WARN 14804 --- [http-nio-8080-exec-7] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/myblog?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8, version : 1.2.4, lastPacketReceivedIdleMillis : 718933
2021-03-29 14:49:56.376  INFO 14804 --- [http-nio-8080-exec-7] com.ljx.blog.config.LogConfig            : Result: admin/blogs-input
2021-03-29 14:50:10.168  INFO 14804 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2021-03-29 14:50:10.172  INFO 14804 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closing ...
2021-03-29 14:50:10.175  INFO 14804 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2021-03-29 15:03:23.420  INFO 20460 --- [restartedMain] com.ljx.blog.BlogApplication             : Starting BlogApplication using Java 1.8.0_271 on W10-20201212464 with PID 20460 (D:\UserData\Desktop\project\get-projiect\blog\target\classes started by Lin in D:\UserData\Desktop\project\get-projiect\blog)
2021-03-29 15:03:23.423  INFO 20460 --- [restartedMain] com.ljx.blog.BlogApplication             : The following profiles are active: dev
2021-03-29 15:03:23.491  INFO 20460 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-03-29 15:03:23.492  INFO 20460 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-03-29 15:03:24.640  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration$$EnhancerBySpringCGLIB$$79d18893] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:03:24.653  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration$$EnhancerBySpringCGLIB$$7c64c738] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:03:24.841  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'shiroConfig' of type [com.ljx.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$9d5495fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:03:24.937  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:03:24.945  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$998cfc13] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:03:24.951  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$8064a055] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:03:24.953  INFO 20460 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-03-29 15:03:25.002  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:03:25.010  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:03:25.029  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:03:25.130  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'wallConfig' of type [com.alibaba.druid.wall.WallConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:03:25.144  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'wallFilter' of type [com.alibaba.druid.wall.WallFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:03:25.264  INFO 20460 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-03-29 15:03:25.264  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:03:25.319  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:03:25.620  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:03:25.625  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:03:25.630  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:03:25.634  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userDao' of type [com.sun.proxy.$Proxy80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:03:25.640  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userServiceImpl' of type [com.ljx.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:03:25.641  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'getRealm' of type [com.ljx.blog.config.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:03:26.430  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'defaultWebSecurityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:03:26.451  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:03:26.469  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'eventBus' of type [org.apache.shiro.event.support.DefaultEventBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:03:26.753  INFO 20460 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-03-29 15:03:26.762  INFO 20460 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-03-29 15:03:26.762  INFO 20460 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.43]
2021-03-29 15:03:26.834  INFO 20460 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-03-29 15:03:26.834  INFO 20460 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3341 ms
2021-03-29 15:03:27.948  INFO 20460 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-03-29 15:03:28.021  INFO 20460 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-03-29 15:03:28.069  INFO 20460 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-03-29 15:03:28.672  INFO 20460 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-03-29 15:03:28.951  INFO 20460 --- [restartedMain] com.ljx.blog.BlogApplication             : Started BlogApplication in 6.335 seconds (JVM running for 9.716)
2021-03-29 15:03:40.890  INFO 20460 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-03-29 15:03:40.891  INFO 20460 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-03-29 15:03:40.892  INFO 20460 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-03-29 15:03:40.946  INFO 20460 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.IndexController.index, args=[])
2021-03-29 15:03:40.954  INFO 20460 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Result: index
2021-03-29 15:04:03.364  INFO 20460 --- [http-nio-8080-exec-4] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.UserController.getLogin, args=[])
2021-03-29 15:04:03.367  INFO 20460 --- [http-nio-8080-exec-4] com.ljx.blog.config.LogConfig            : Result: admin/login
2021-03-29 15:04:09.191  INFO 20460 --- [http-nio-8080-exec-2] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/login, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.UserController.login, args=[linjx, 1111, {}])
2021-03-29 15:04:09.847  INFO 20460 --- [http-nio-8080-exec-2] com.ljx.blog.config.LogConfig            : Result: admin/index
2021-03-29 15:04:12.213  INFO 20460 --- [http-nio-8080-exec-4] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getBlogs, args=[1, {}])
2021-03-29 15:04:12.289  INFO 20460 --- [http-nio-8080-exec-4] com.ljx.blog.config.LogConfig            : Result: admin/blogs
2021-03-29 15:04:14.169  INFO 20460 --- [http-nio-8080-exec-3] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/2/input, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getUpdateBlog, args=[2, {}])
2021-03-29 15:04:14.183  INFO 20460 --- [http-nio-8080-exec-3] com.ljx.blog.config.LogConfig            : Result: admin/blogs-input
2021-03-29 15:04:33.167  WARN 20460 --- [http-nio-8080-exec-5] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2021-03-29 15:04:33.177  INFO 20460 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/2, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.updateBlog, args=[2, {showBlog=ShowBlog(id=2, flag=1, title=数据库知识点复习, content=## MyISAM和InnoDB区别

​	MyISAM是MySQL的默认数据库引擎（5.5版之前）。虽然性能极佳，而且提供了大量的特性，包括全文索引、压缩、空间函数等，但MyISAM不支持事务和行级锁，而且最大的缺陷就是崩溃后无法安全恢复。不过，5.5版本之后，MySQL引入了InnoDB（事务性数据库引擎），MySQL 5.5版本后默认的存储引擎为InnoDB。

​	大多数时候我们使用的都是 InnoDB 存储引擎，但是在某些情况下使用 MyISAM 也是合适的比如读密集的情况下。（如果你不介意 MyISAM 崩溃恢复问题的话）。

**具体区别**

- **是否支持行级锁 :** MyISAM 只有表级锁(table-level locking)，而InnoDB 支持行级锁(row-level locking)和表级锁,默认为行级锁。
- **是否支持事务和崩溃后的安全恢复：** MyISAM 强调的是性能，每次查询具有原子性,其执行速度比InnoDB类型更快，但是不提供事务支持。但是InnoDB 提供事务支持事务，外部键等高级数据库功能。 具有事务(commit)、回滚(rollback)和崩溃修复能力(crash recovery capabilities)的事务安全(transaction-safe (ACID compliant))型表。
- **是否支持外键：** MyISAM不支持，而InnoDB支持。
- **是否支持MVCC：** 仅InnoDB 支持。应对高并发事务, MVCC比单纯的加锁更高效;MVCC只在 READ COMMITTED 和 REPEATABLE READ 两个隔离级别下工作;MVCC可以使用 乐观(optimistic)锁 和 悲观(pessimistic)锁来实现;各数据库中MVCC实现并不统一。

   MyISAM适合：(1) 做很多count 的计算；(2) 读密集；(3) 没有事务；
   InnoDB适合：(1) 要求事务；(2)写密集 ；(3) 高并发；

## 事物

### 什么是事务?

​	事务是逻辑上的一组操作，**要么都执行，要么都不执行**。

###          事物的四大特性 

- 原子性（Atomicity）： 事务是最小的执行单位，不允许分割。事务的原子性确保动作要么全部完成，要么完全不起作用；
- 一致性（Consistency）： 执行事务前后，数据保持一致，多个事务对同一个数据读取的结果是相同的；
- 隔离性（Isolation）： 并发访问数据库时，一个用户的事务不被其他事务所干扰，各并发事务之间数据库是独立的；
- 持久性（Durability）： 一个事务被提交之后。它对数据库中数据的改变是持久的，即使数据库发生故障也不应该对其有任何影响。

### 并发事务带来哪些问题?

- 脏读（Dirty read）: 一个事务读取了另一个事务修改但未提交的数据。
- 丢失修改（Lost to modify）: 一个事务连续读两次数据，但结果不一样。(两次读之间，数据被其他事务修改)。
- 不可重复读（Unrepeatableread）: 指在一个事务内多次读同一数据。在这个事务还没有结束时，另一个事务也访问该数据。那么，在第一个事务中的两次读数据之间，由于第二个事务的修改导致第一个事务两次读取的数据可能不太一样。这就发生了在一个事务内两次读到的数据是不一样的情况，因此称为不可重复读。
- 幻读（Phantom read）: 一个事务连续读两次数据，读取数据量不一样。(两次读之前，数据被其他事务删除或新增)。

### 事务隔离级别

- 读未提交: 可以读取尚未提交的数据。 **可能会导致脏读、幻读或不可重复读**。 
- 读已提交: 允许读取并发事务已经提交的数据。 **可以阻止脏读，但是幻读或不可重复读仍有可能发生**。 
- 可重复读: 对同一字段的多次读取结果都是一致的，除非数据是被本身事务自己所修改，可以阻止脏读和不可重复读，但幻读仍有可能发生。
  不可重复读很容易让人陷入一个思维定式那就是 我干嘛需要多次读取一个值还要保证一致要跳出这个思维看本质：我在事务中会不会受到其他事务的影响？
  举个简单的例子 数据校对（只是举个例子体现意思 不用太在意具体的业务）
  我要取当前的余额 当前的账单 上个月的余额 我要检验一下数据对不对
  我在事务中取了当前的账单和上个月的余额，好嘛，这时候又有新的订单提交了，我再获取余额是不是就不一致了？
- 串行化: 最高的隔离级别，完全服从ACID的隔离级别。所有的事务依次逐个执行，这样事务之间就完全不可能产生干扰，也就是说， **该级别可以防止脏读、不可重复读以及幻读**。 	

​    MySQL InnoDB默认支持可重复读，但使用了Next-Key Lock算法避免了幻读的发生。完全达到了保保证事务的隔离要求。但在分布式事务下，一般可串行化。

​	设置隔离级别之后，并不是不能并发，而是并发的时候，一个事务的修改数据(绝对读到，提交的才能读到。提交不提交，更新的数据都读不到。提交不提交，增删的数据都读不到)，什么时候才能被另一个事务读到。但彼此的逻辑操作没有影响。

## 锁机制

Mysql为了解决并发、数据安全的问题，使用了锁机制。

可以按照锁的粒度把数据库锁分为**表级锁和行级锁**。

### 按照锁的粒度分类

- 表级锁

Mysql中锁定 **粒度最大** 的一种锁，对当前操作的整张表加锁，实现简单 ，**资源消耗也比较少，加锁快，不会出现死锁 。**其锁定粒度最大，触发锁冲突的概率最高，并发度最低，MyISAM和 InnoDB引擎都支持表级锁。

- 行级锁

Mysql中锁定 **粒度最小** 的一种锁，只针对当前操作的行进行加锁。 行级锁能大大减少数据库操作的冲突。其加锁粒度最小，并发度高，**但加锁的开销也最大，加锁慢，会出现死锁。** InnoDB支持的行级锁，包括如下几种。

- Record Lock: 对索引项加锁，锁定符合条件的行。其他事务不能修改和删除加锁项；
- Gap Lock: 对索引项之间的“间隙”加锁，锁定记录的范围（对第一条记录前的间隙或最后一条将记录后的间隙加锁），不包含索引项本身。其他事务不能在锁范围内插入数据，这样就防止了别的事务新增幻影行。
- Next-key Lock： 锁定索引项本身和索引范围。即Record Lock和Gap Lock的结合。可解决幻读问题。

 **虽然使用行级索具有粒度小、并发度高等特点，但是表级锁有时候也是非常必要的**： 

- 事务更新大表中的大部分数据直接使用表级锁效率更高；
- 事务比较复杂，使用行级索很可能引起死锁导致回滚。

 **表级锁和行级锁可以进一步划分为共享锁（s）和排他锁（X）。** 

### 按照是否可写分类

**共享锁（s）**

**共享锁（Share Locks，简记为S）又被称为读锁**，其他用户可以并发读取数据，但任何事务都不能获取数据上的排他锁，直到已释放所有共享锁。

共享锁(S锁)又称为读锁，若事务T对数据对象A加上S锁，则事务T只能读A；其他事务只能再对A加S锁，而不能加X锁，直到T释放A上的S锁。这就保证了其他事务可以读A，但在T释放A上的S锁之前不能对A做任何修改。 

 **排他锁（X）：** 

排它锁（(Exclusive lock,简记为X锁)）又称为写锁，若事务T对数据对象A加上X锁，则只允许T读取和修改A，其它任何事务都不能再对A加任何类型的锁，直到T释放A上的锁。它防止任何其它事务获取资源上的锁，直到在事务的末尾将资源上的原始锁释放为止。在更新操作(INSERT、UPDATE 或 DELETE)过程中始终应用排它锁。

**两者之间的区别：**

1. 共享锁（S锁）：如果事务T对数据A加上共享锁后，则其他事务只能对A再加共享锁，不 能加排他锁。获取共享锁的事务只能读数据，不能修改数据。
2. 排他锁（X锁）：如果事务T对数据A加上排他锁后，则其他事务不能再对A加任任何类型的封锁。获取排他锁的事务既能读数据，又能修改数据。

### 死锁和避免死锁 

MyISAM中是不会产生死锁的，因为MyISAM总是一次性获得所需的全部锁，要么全部满足，要么全部等待。而在InnoDB中，锁是逐步获得的，就造成了死锁的可能。

在MySQL中，行级锁并不是直接锁记录，而是锁索引。索引分为主键索引和非主键索引两种，如果一条SQL语句操作了主键索引，MySQL就会锁定这条主键索引；如果一条语句操作了非主键索引，MySQL会先锁定该非主键索引，再锁定相关的主键索引。 在UPDATE、DELETE操作时，MySQL不仅锁定WHERE条件扫描过的所有索引记录，而且会锁定相邻的键值，即所谓的next-key locking。

当两个事务同时执行，一个锁住了主键索引，在等待其他相关索引。另一个锁定了非主键索引，在等待主键索引。这样就会发生死锁。

发生死锁后，InnoDB一般都可以检测到，并使一个事务释放锁回退，另一个获取锁完成事务。

有多种方法可以避免死锁，这里只介绍常见的三种

1. 如果不同程序会并发存取多个表，尽量约定以相同的顺序访问表，可以大大降低死锁机会。
2. 在同一个事务中，尽可能做到一次锁定所需要的所有资源，减少死锁产生概率；
3. 对于非常容易产生死锁的业务部分，可以尝试使用升级锁定颗粒度，通过表级锁定来减少死锁产生的概率


------------
### 参考
**部分内容转载自Guide博客**

, typeId=3, firstPicture=http://47.93.123.42:80/upload/images/20200715/1594793427645_376.jpg, description=MySQL存储引擎,事务,锁机制总结，常用命令等。, recommend=true, published=true, shareStatement=true, appreciation=true, commentabled=true, updateTime=null), org.springframework.validation.BindingResult.showBlog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, ShowBlog(id=2, flag=1, title=数据库知识点复习, content=## MyISAM和InnoDB区别

​	MyISAM是MySQL的默认数据库引擎（5.5版之前）。虽然性能极佳，而且提供了大量的特性，包括全文索引、压缩、空间函数等，但MyISAM不支持事务和行级锁，而且最大的缺陷就是崩溃后无法安全恢复。不过，5.5版本之后，MySQL引入了InnoDB（事务性数据库引擎），MySQL 5.5版本后默认的存储引擎为InnoDB。

​	大多数时候我们使用的都是 InnoDB 存储引擎，但是在某些情况下使用 MyISAM 也是合适的比如读密集的情况下。（如果你不介意 MyISAM 崩溃恢复问题的话）。

**具体区别**

- **是否支持行级锁 :** MyISAM 只有表级锁(table-level locking)，而InnoDB 支持行级锁(row-level locking)和表级锁,默认为行级锁。
- **是否支持事务和崩溃后的安全恢复：** MyISAM 强调的是性能，每次查询具有原子性,其执行速度比InnoDB类型更快，但是不提供事务支持。但是InnoDB 提供事务支持事务，外部键等高级数据库功能。 具有事务(commit)、回滚(rollback)和崩溃修复能力(crash recovery capabilities)的事务安全(transaction-safe (ACID compliant))型表。
- **是否支持外键：** MyISAM不支持，而InnoDB支持。
- **是否支持MVCC：** 仅InnoDB 支持。应对高并发事务, MVCC比单纯的加锁更高效;MVCC只在 READ COMMITTED 和 REPEATABLE READ 两个隔离级别下工作;MVCC可以使用 乐观(optimistic)锁 和 悲观(pessimistic)锁来实现;各数据库中MVCC实现并不统一。

   MyISAM适合：(1) 做很多count 的计算；(2) 读密集；(3) 没有事务；
   InnoDB适合：(1) 要求事务；(2)写密集 ；(3) 高并发；

## 事物

### 什么是事务?

​	事务是逻辑上的一组操作，**要么都执行，要么都不执行**。

###          事物的四大特性 

- 原子性（Atomicity）： 事务是最小的执行单位，不允许分割。事务的原子性确保动作要么全部完成，要么完全不起作用；
- 一致性（Consistency）： 执行事务前后，数据保持一致，多个事务对同一个数据读取的结果是相同的；
- 隔离性（Isolation）： 并发访问数据库时，一个用户的事务不被其他事务所干扰，各并发事务之间数据库是独立的；
- 持久性（Durability）： 一个事务被提交之后。它对数据库中数据的改变是持久的，即使数据库发生故障也不应该对其有任何影响。

### 并发事务带来哪些问题?

- 脏读（Dirty read）: 一个事务读取了另一个事务修改但未提交的数据。
- 丢失修改（Lost to modify）: 一个事务连续读两次数据，但结果不一样。(两次读之间，数据被其他事务修改)。
- 不可重复读（Unrepeatableread）: 指在一个事务内多次读同一数据。在这个事务还没有结束时，另一个事务也访问该数据。那么，在第一个事务中的两次读数据之间，由于第二个事务的修改导致第一个事务两次读取的数据可能不太一样。这就发生了在一个事务内两次读到的数据是不一样的情况，因此称为不可重复读。
- 幻读（Phantom read）: 一个事务连续读两次数据，读取数据量不一样。(两次读之前，数据被其他事务删除或新增)。

### 事务隔离级别

- 读未提交: 可以读取尚未提交的数据。 **可能会导致脏读、幻读或不可重复读**。 
- 读已提交: 允许读取并发事务已经提交的数据。 **可以阻止脏读，但是幻读或不可重复读仍有可能发生**。 
- 可重复读: 对同一字段的多次读取结果都是一致的，除非数据是被本身事务自己所修改，可以阻止脏读和不可重复读，但幻读仍有可能发生。
  不可重复读很容易让人陷入一个思维定式那就是 我干嘛需要多次读取一个值还要保证一致要跳出这个思维看本质：我在事务中会不会受到其他事务的影响？
  举个简单的例子 数据校对（只是举个例子体现意思 不用太在意具体的业务）
  我要取当前的余额 当前的账单 上个月的余额 我要检验一下数据对不对
  我在事务中取了当前的账单和上个月的余额，好嘛，这时候又有新的订单提交了，我再获取余额是不是就不一致了？
- 串行化: 最高的隔离级别，完全服从ACID的隔离级别。所有的事务依次逐个执行，这样事务之间就完全不可能产生干扰，也就是说， **该级别可以防止脏读、不可重复读以及幻读**。 	

​    MySQL InnoDB默认支持可重复读，但使用了Next-Key Lock算法避免了幻读的发生。完全达到了保保证事务的隔离要求。但在分布式事务下，一般可串行化。

​	设置隔离级别之后，并不是不能并发，而是并发的时候，一个事务的修改数据(绝对读到，提交的才能读到。提交不提交，更新的数据都读不到。提交不提交，增删的数据都读不到)，什么时候才能被另一个事务读到。但彼此的逻辑操作没有影响。

## 锁机制

Mysql为了解决并发、数据安全的问题，使用了锁机制。

可以按照锁的粒度把数据库锁分为**表级锁和行级锁**。

### 按照锁的粒度分类

- 表级锁

Mysql中锁定 **粒度最大** 的一种锁，对当前操作的整张表加锁，实现简单 ，**资源消耗也比较少，加锁快，不会出现死锁 。**其锁定粒度最大，触发锁冲突的概率最高，并发度最低，MyISAM和 InnoDB引擎都支持表级锁。

- 行级锁

Mysql中锁定 **粒度最小** 的一种锁，只针对当前操作的行进行加锁。 行级锁能大大减少数据库操作的冲突。其加锁粒度最小，并发度高，**但加锁的开销也最大，加锁慢，会出现死锁。** InnoDB支持的行级锁，包括如下几种。

- Record Lock: 对索引项加锁，锁定符合条件的行。其他事务不能修改和删除加锁项；
- Gap Lock: 对索引项之间的“间隙”加锁，锁定记录的范围（对第一条记录前的间隙或最后一条将记录后的间隙加锁），不包含索引项本身。其他事务不能在锁范围内插入数据，这样就防止了别的事务新增幻影行。
- Next-key Lock： 锁定索引项本身和索引范围。即Record Lock和Gap Lock的结合。可解决幻读问题。

 **虽然使用行级索具有粒度小、并发度高等特点，但是表级锁有时候也是非常必要的**： 

- 事务更新大表中的大部分数据直接使用表级锁效率更高；
- 事务比较复杂，使用行级索很可能引起死锁导致回滚。

 **表级锁和行级锁可以进一步划分为共享锁（s）和排他锁（X）。** 

### 按照是否可写分类

**共享锁（s）**

**共享锁（Share Locks，简记为S）又被称为读锁**，其他用户可以并发读取数据，但任何事务都不能获取数据上的排他锁，直到已释放所有共享锁。

共享锁(S锁)又称为读锁，若事务T对数据对象A加上S锁，则事务T只能读A；其他事务只能再对A加S锁，而不能加X锁，直到T释放A上的S锁。这就保证了其他事务可以读A，但在T释放A上的S锁之前不能对A做任何修改。 

 **排他锁（X）：** 

排它锁（(Exclusive lock,简记为X锁)）又称为写锁，若事务T对数据对象A加上X锁，则只允许T读取和修改A，其它任何事务都不能再对A加任何类型的锁，直到T释放A上的锁。它防止任何其它事务获取资源上的锁，直到在事务的末尾将资源上的原始锁释放为止。在更新操作(INSERT、UPDATE 或 DELETE)过程中始终应用排它锁。

**两者之间的区别：**

1. 共享锁（S锁）：如果事务T对数据A加上共享锁后，则其他事务只能对A再加共享锁，不 能加排他锁。获取共享锁的事务只能读数据，不能修改数据。
2. 排他锁（X锁）：如果事务T对数据A加上排他锁后，则其他事务不能再对A加任任何类型的封锁。获取排他锁的事务既能读数据，又能修改数据。

### 死锁和避免死锁 

MyISAM中是不会产生死锁的，因为MyISAM总是一次性获得所需的全部锁，要么全部满足，要么全部等待。而在InnoDB中，锁是逐步获得的，就造成了死锁的可能。

在MySQL中，行级锁并不是直接锁记录，而是锁索引。索引分为主键索引和非主键索引两种，如果一条SQL语句操作了主键索引，MySQL就会锁定这条主键索引；如果一条语句操作了非主键索引，MySQL会先锁定该非主键索引，再锁定相关的主键索引。 在UPDATE、DELETE操作时，MySQL不仅锁定WHERE条件扫描过的所有索引记录，而且会锁定相邻的键值，即所谓的next-key locking。

当两个事务同时执行，一个锁住了主键索引，在等待其他相关索引。另一个锁定了非主键索引，在等待主键索引。这样就会发生死锁。

发生死锁后，InnoDB一般都可以检测到，并使一个事务释放锁回退，另一个获取锁完成事务。

有多种方法可以避免死锁，这里只介绍常见的三种

1. 如果不同程序会并发存取多个表，尽量约定以相同的顺序访问表，可以大大降低死锁机会。
2. 在同一个事务中，尽可能做到一次锁定所需要的所有资源，减少死锁产生概率；
3. 对于非常容易产生死锁的业务部分，可以尝试使用升级锁定颗粒度，通过表级锁定来减少死锁产生的概率


------------
### 参考
**部分内容转载自Guide博客**

, typeId=3, firstPicture=http://47.93.123.42:80/upload/images/20200715/1594793427645_376.jpg, description=MySQL存储引擎,事务,锁机制总结，常用命令等。, recommend=true, published=true, shareStatement=true, appreciation=true, commentabled=true, updateTime=null)])
2021-03-29 15:04:33.198  INFO 20460 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Result: redirect:/admin/blogs
2021-03-29 15:04:33.228  INFO 20460 --- [http-nio-8080-exec-7] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getBlogs, args=[1, {}])
2021-03-29 15:04:33.240  INFO 20460 --- [http-nio-8080-exec-7] com.ljx.blog.config.LogConfig            : Result: admin/blogs
2021-03-29 15:04:36.684  INFO 20460 --- [http-nio-8080-exec-10] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/2/input, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getUpdateBlog, args=[2, {}])
2021-03-29 15:04:36.692  INFO 20460 --- [http-nio-8080-exec-10] com.ljx.blog.config.LogConfig            : Result: admin/blogs-input
2021-03-29 15:06:36.719  INFO 20460 --- [http-nio-8080-exec-4] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/2/input, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getUpdateBlog, args=[2, {}])
2021-03-29 15:06:36.731  WARN 20460 --- [http-nio-8080-exec-4] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/myblog?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8, version : 1.2.4, lastPacketReceivedIdleMillis : 120029
2021-03-29 15:06:36.774  INFO 20460 --- [http-nio-8080-exec-4] com.ljx.blog.config.LogConfig            : Result: admin/blogs-input
2021-03-29 15:06:48.916  WARN 20460 --- [http-nio-8080-exec-3] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2021-03-29 15:06:48.918  INFO 20460 --- [http-nio-8080-exec-3] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/2, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.updateBlog, args=[2, {showBlog=ShowBlog(id=2, flag=1, title=数据库知识点复习, content=## MyISAM和InnoDB区别

​	MyISAM是MySQL的默认数据库引擎（5.5版之前）。虽然性能极佳，而且提供了大量的特性，包括全文索引、压缩、空间函数等，但MyISAM不支持事务和行级锁，而且最大的缺陷就是崩溃后无法安全恢复。不过，5.5版本之后，MySQL引入了InnoDB（事务性数据库引擎），MySQL 5.5版本后默认的存储引擎为InnoDB。

​	大多数时候我们使用的都是 InnoDB 存储引擎，但是在某些情况下使用 MyISAM 也是合适的比如读密集的情况下。（如果你不介意 MyISAM 崩溃恢复问题的话）。

**具体区别**

- **是否支持行级锁 :** MyISAM 只有表级锁(table-level locking)，而InnoDB 支持行级锁(row-level locking)和表级锁,默认为行级锁。
- **是否支持事务和崩溃后的安全恢复：** MyISAM 强调的是性能，每次查询具有原子性,其执行速度比InnoDB类型更快，但是不提供事务支持。但是InnoDB 提供事务支持事务，外部键等高级数据库功能。 具有事务(commit)、回滚(rollback)和崩溃修复能力(crash recovery capabilities)的事务安全(transaction-safe (ACID compliant))型表。
- **是否支持外键：** MyISAM不支持，而InnoDB支持。
- **是否支持MVCC：** 仅InnoDB 支持。应对高并发事务, MVCC比单纯的加锁更高效;MVCC只在 READ COMMITTED 和 REPEATABLE READ 两个隔离级别下工作;MVCC可以使用 乐观(optimistic)锁 和 悲观(pessimistic)锁来实现;各数据库中MVCC实现并不统一。

   MyISAM适合：(1) 做很多count 的计算；(2) 读密集；(3) 没有事务；
   InnoDB适合：(1) 要求事务；(2)写密集 ；(3) 高并发；

## 事物

### 什么是事务?

​	事务是逻辑上的一组操作，**要么都执行，要么都不执行**。

###          事物的四大特性 

- 原子性（Atomicity）： 事务是最小的执行单位，不允许分割。事务的原子性确保动作要么全部完成，要么完全不起作用；
- 一致性（Consistency）： 执行事务前后，数据保持一致，多个事务对同一个数据读取的结果是相同的；
- 隔离性（Isolation）： 并发访问数据库时，一个用户的事务不被其他事务所干扰，各并发事务之间数据库是独立的；
- 持久性（Durability）： 一个事务被提交之后。它对数据库中数据的改变是持久的，即使数据库发生故障也不应该对其有任何影响。

### 并发事务带来哪些问题?

- 脏读（Dirty read）: 一个事务读取了另一个事务修改但未提交的数据。
- 丢失修改（Lost to modify）: 一个事务连续读两次数据，但结果不一样。(两次读之间，数据被其他事务修改)。
- 不可重复读（Unrepeatableread）: 指在一个事务内多次读同一数据。在这个事务还没有结束时，另一个事务也访问该数据。那么，在第一个事务中的两次读数据之间，由于第二个事务的修改导致第一个事务两次读取的数据可能不太一样。这就发生了在一个事务内两次读到的数据是不一样的情况，因此称为不可重复读。
- 幻读（Phantom read）: 一个事务连续读两次数据，读取数据量不一样。(两次读之前，数据被其他事务删除或新增)。

### 事务隔离级别

- 读未提交: 可以读取尚未提交的数据。 **可能会导致脏读、幻读或不可重复读**。 
- 读已提交: 允许读取并发事务已经提交的数据。 **可以阻止脏读，但是幻读或不可重复读仍有可能发生**。 
- 可重复读: 对同一字段的多次读取结果都是一致的，除非数据是被本身事务自己所修改，可以阻止脏读和不可重复读，但幻读仍有可能发生。
  不可重复读很容易让人陷入一个思维定式那就是 我干嘛需要多次读取一个值还要保证一致要跳出这个思维看本质：我在事务中会不会受到其他事务的影响？
  举个简单的例子 数据校对（只是举个例子体现意思 不用太在意具体的业务）
  我要取当前的余额 当前的账单 上个月的余额 我要检验一下数据对不对
  我在事务中取了当前的账单和上个月的余额，好嘛，这时候又有新的订单提交了，我再获取余额是不是就不一致了？
- 串行化: 最高的隔离级别，完全服从ACID的隔离级别。所有的事务依次逐个执行，这样事务之间就完全不可能产生干扰，也就是说， **该级别可以防止脏读、不可重复读以及幻读**。 	

​    MySQL InnoDB默认支持可重复读，但使用了Next-Key Lock算法避免了幻读的发生。完全达到了保保证事务的隔离要求。但在分布式事务下，一般可串行化。

​	设置隔离级别之后，并不是不能并发，而是并发的时候，一个事务的修改数据(绝对读到，提交的才能读到。提交不提交，更新的数据都读不到。提交不提交，增删的数据都读不到)，什么时候才能被另一个事务读到。但彼此的逻辑操作没有影响。

## 锁机制

Mysql为了解决并发、数据安全的问题，使用了锁机制。

可以按照锁的粒度把数据库锁分为**表级锁和行级锁**。

### 按照锁的粒度分类

- 表级锁

Mysql中锁定 **粒度最大** 的一种锁，对当前操作的整张表加锁，实现简单 ，**资源消耗也比较少，加锁快，不会出现死锁 。**其锁定粒度最大，触发锁冲突的概率最高，并发度最低，MyISAM和 InnoDB引擎都支持表级锁。

- 行级锁

Mysql中锁定 **粒度最小** 的一种锁，只针对当前操作的行进行加锁。 行级锁能大大减少数据库操作的冲突。其加锁粒度最小，并发度高，**但加锁的开销也最大，加锁慢，会出现死锁。** InnoDB支持的行级锁，包括如下几种。

- Record Lock: 对索引项加锁，锁定符合条件的行。其他事务不能修改和删除加锁项；
- Gap Lock: 对索引项之间的“间隙”加锁，锁定记录的范围（对第一条记录前的间隙或最后一条将记录后的间隙加锁），不包含索引项本身。其他事务不能在锁范围内插入数据，这样就防止了别的事务新增幻影行。
- Next-key Lock： 锁定索引项本身和索引范围。即Record Lock和Gap Lock的结合。可解决幻读问题。

 **虽然使用行级索具有粒度小、并发度高等特点，但是表级锁有时候也是非常必要的**： 

- 事务更新大表中的大部分数据直接使用表级锁效率更高；
- 事务比较复杂，使用行级索很可能引起死锁导致回滚。

 **表级锁和行级锁可以进一步划分为共享锁（s）和排他锁（X）。** 

### 按照是否可写分类

**共享锁（s）**

**共享锁（Share Locks，简记为S）又被称为读锁**，其他用户可以并发读取数据，但任何事务都不能获取数据上的排他锁，直到已释放所有共享锁。

共享锁(S锁)又称为读锁，若事务T对数据对象A加上S锁，则事务T只能读A；其他事务只能再对A加S锁，而不能加X锁，直到T释放A上的S锁。这就保证了其他事务可以读A，但在T释放A上的S锁之前不能对A做任何修改。 

 **排他锁（X）：** 

排它锁（(Exclusive lock,简记为X锁)）又称为写锁，若事务T对数据对象A加上X锁，则只允许T读取和修改A，其它任何事务都不能再对A加任何类型的锁，直到T释放A上的锁。它防止任何其它事务获取资源上的锁，直到在事务的末尾将资源上的原始锁释放为止。在更新操作(INSERT、UPDATE 或 DELETE)过程中始终应用排它锁。

**两者之间的区别：**

1. 共享锁（S锁）：如果事务T对数据A加上共享锁后，则其他事务只能对A再加共享锁，不 能加排他锁。获取共享锁的事务只能读数据，不能修改数据。
2. 排他锁（X锁）：如果事务T对数据A加上排他锁后，则其他事务不能再对A加任任何类型的封锁。获取排他锁的事务既能读数据，又能修改数据。

### 死锁和避免死锁 

MyISAM中是不会产生死锁的，因为MyISAM总是一次性获得所需的全部锁，要么全部满足，要么全部等待。而在InnoDB中，锁是逐步获得的，就造成了死锁的可能。

在MySQL中，行级锁并不是直接锁记录，而是锁索引。索引分为主键索引和非主键索引两种，如果一条SQL语句操作了主键索引，MySQL就会锁定这条主键索引；如果一条语句操作了非主键索引，MySQL会先锁定该非主键索引，再锁定相关的主键索引。 在UPDATE、DELETE操作时，MySQL不仅锁定WHERE条件扫描过的所有索引记录，而且会锁定相邻的键值，即所谓的next-key locking。

当两个事务同时执行，一个锁住了主键索引，在等待其他相关索引。另一个锁定了非主键索引，在等待主键索引。这样就会发生死锁。

发生死锁后，InnoDB一般都可以检测到，并使一个事务释放锁回退，另一个获取锁完成事务。

有多种方法可以避免死锁，这里只介绍常见的三种

1. 如果不同程序会并发存取多个表，尽量约定以相同的顺序访问表，可以大大降低死锁机会。
2. 在同一个事务中，尽可能做到一次锁定所需要的所有资源，减少死锁产生概率；
3. 对于非常容易产生死锁的业务部分，可以尝试使用升级锁定颗粒度，通过表级锁定来减少死锁产生的概率


------------
### 参考
**部分内容转载自Guide博客**

, typeId=3, firstPicture=http://47.93.123.42:80/upload/images/20200715/1594793427645_376.jpg, description=MySQL存储引擎,事务,锁机制总结。, recommend=false, published=false, shareStatement=true, appreciation=true, commentabled=true, updateTime=null), org.springframework.validation.BindingResult.showBlog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, ShowBlog(id=2, flag=1, title=数据库知识点复习, content=## MyISAM和InnoDB区别

​	MyISAM是MySQL的默认数据库引擎（5.5版之前）。虽然性能极佳，而且提供了大量的特性，包括全文索引、压缩、空间函数等，但MyISAM不支持事务和行级锁，而且最大的缺陷就是崩溃后无法安全恢复。不过，5.5版本之后，MySQL引入了InnoDB（事务性数据库引擎），MySQL 5.5版本后默认的存储引擎为InnoDB。

​	大多数时候我们使用的都是 InnoDB 存储引擎，但是在某些情况下使用 MyISAM 也是合适的比如读密集的情况下。（如果你不介意 MyISAM 崩溃恢复问题的话）。

**具体区别**

- **是否支持行级锁 :** MyISAM 只有表级锁(table-level locking)，而InnoDB 支持行级锁(row-level locking)和表级锁,默认为行级锁。
- **是否支持事务和崩溃后的安全恢复：** MyISAM 强调的是性能，每次查询具有原子性,其执行速度比InnoDB类型更快，但是不提供事务支持。但是InnoDB 提供事务支持事务，外部键等高级数据库功能。 具有事务(commit)、回滚(rollback)和崩溃修复能力(crash recovery capabilities)的事务安全(transaction-safe (ACID compliant))型表。
- **是否支持外键：** MyISAM不支持，而InnoDB支持。
- **是否支持MVCC：** 仅InnoDB 支持。应对高并发事务, MVCC比单纯的加锁更高效;MVCC只在 READ COMMITTED 和 REPEATABLE READ 两个隔离级别下工作;MVCC可以使用 乐观(optimistic)锁 和 悲观(pessimistic)锁来实现;各数据库中MVCC实现并不统一。

   MyISAM适合：(1) 做很多count 的计算；(2) 读密集；(3) 没有事务；
   InnoDB适合：(1) 要求事务；(2)写密集 ；(3) 高并发；

## 事物

### 什么是事务?

​	事务是逻辑上的一组操作，**要么都执行，要么都不执行**。

###          事物的四大特性 

- 原子性（Atomicity）： 事务是最小的执行单位，不允许分割。事务的原子性确保动作要么全部完成，要么完全不起作用；
- 一致性（Consistency）： 执行事务前后，数据保持一致，多个事务对同一个数据读取的结果是相同的；
- 隔离性（Isolation）： 并发访问数据库时，一个用户的事务不被其他事务所干扰，各并发事务之间数据库是独立的；
- 持久性（Durability）： 一个事务被提交之后。它对数据库中数据的改变是持久的，即使数据库发生故障也不应该对其有任何影响。

### 并发事务带来哪些问题?

- 脏读（Dirty read）: 一个事务读取了另一个事务修改但未提交的数据。
- 丢失修改（Lost to modify）: 一个事务连续读两次数据，但结果不一样。(两次读之间，数据被其他事务修改)。
- 不可重复读（Unrepeatableread）: 指在一个事务内多次读同一数据。在这个事务还没有结束时，另一个事务也访问该数据。那么，在第一个事务中的两次读数据之间，由于第二个事务的修改导致第一个事务两次读取的数据可能不太一样。这就发生了在一个事务内两次读到的数据是不一样的情况，因此称为不可重复读。
- 幻读（Phantom read）: 一个事务连续读两次数据，读取数据量不一样。(两次读之前，数据被其他事务删除或新增)。

### 事务隔离级别

- 读未提交: 可以读取尚未提交的数据。 **可能会导致脏读、幻读或不可重复读**。 
- 读已提交: 允许读取并发事务已经提交的数据。 **可以阻止脏读，但是幻读或不可重复读仍有可能发生**。 
- 可重复读: 对同一字段的多次读取结果都是一致的，除非数据是被本身事务自己所修改，可以阻止脏读和不可重复读，但幻读仍有可能发生。
  不可重复读很容易让人陷入一个思维定式那就是 我干嘛需要多次读取一个值还要保证一致要跳出这个思维看本质：我在事务中会不会受到其他事务的影响？
  举个简单的例子 数据校对（只是举个例子体现意思 不用太在意具体的业务）
  我要取当前的余额 当前的账单 上个月的余额 我要检验一下数据对不对
  我在事务中取了当前的账单和上个月的余额，好嘛，这时候又有新的订单提交了，我再获取余额是不是就不一致了？
- 串行化: 最高的隔离级别，完全服从ACID的隔离级别。所有的事务依次逐个执行，这样事务之间就完全不可能产生干扰，也就是说， **该级别可以防止脏读、不可重复读以及幻读**。 	

​    MySQL InnoDB默认支持可重复读，但使用了Next-Key Lock算法避免了幻读的发生。完全达到了保保证事务的隔离要求。但在分布式事务下，一般可串行化。

​	设置隔离级别之后，并不是不能并发，而是并发的时候，一个事务的修改数据(绝对读到，提交的才能读到。提交不提交，更新的数据都读不到。提交不提交，增删的数据都读不到)，什么时候才能被另一个事务读到。但彼此的逻辑操作没有影响。

## 锁机制

Mysql为了解决并发、数据安全的问题，使用了锁机制。

可以按照锁的粒度把数据库锁分为**表级锁和行级锁**。

### 按照锁的粒度分类

- 表级锁

Mysql中锁定 **粒度最大** 的一种锁，对当前操作的整张表加锁，实现简单 ，**资源消耗也比较少，加锁快，不会出现死锁 。**其锁定粒度最大，触发锁冲突的概率最高，并发度最低，MyISAM和 InnoDB引擎都支持表级锁。

- 行级锁

Mysql中锁定 **粒度最小** 的一种锁，只针对当前操作的行进行加锁。 行级锁能大大减少数据库操作的冲突。其加锁粒度最小，并发度高，**但加锁的开销也最大，加锁慢，会出现死锁。** InnoDB支持的行级锁，包括如下几种。

- Record Lock: 对索引项加锁，锁定符合条件的行。其他事务不能修改和删除加锁项；
- Gap Lock: 对索引项之间的“间隙”加锁，锁定记录的范围（对第一条记录前的间隙或最后一条将记录后的间隙加锁），不包含索引项本身。其他事务不能在锁范围内插入数据，这样就防止了别的事务新增幻影行。
- Next-key Lock： 锁定索引项本身和索引范围。即Record Lock和Gap Lock的结合。可解决幻读问题。

 **虽然使用行级索具有粒度小、并发度高等特点，但是表级锁有时候也是非常必要的**： 

- 事务更新大表中的大部分数据直接使用表级锁效率更高；
- 事务比较复杂，使用行级索很可能引起死锁导致回滚。

 **表级锁和行级锁可以进一步划分为共享锁（s）和排他锁（X）。** 

### 按照是否可写分类

**共享锁（s）**

**共享锁（Share Locks，简记为S）又被称为读锁**，其他用户可以并发读取数据，但任何事务都不能获取数据上的排他锁，直到已释放所有共享锁。

共享锁(S锁)又称为读锁，若事务T对数据对象A加上S锁，则事务T只能读A；其他事务只能再对A加S锁，而不能加X锁，直到T释放A上的S锁。这就保证了其他事务可以读A，但在T释放A上的S锁之前不能对A做任何修改。 

 **排他锁（X）：** 

排它锁（(Exclusive lock,简记为X锁)）又称为写锁，若事务T对数据对象A加上X锁，则只允许T读取和修改A，其它任何事务都不能再对A加任何类型的锁，直到T释放A上的锁。它防止任何其它事务获取资源上的锁，直到在事务的末尾将资源上的原始锁释放为止。在更新操作(INSERT、UPDATE 或 DELETE)过程中始终应用排它锁。

**两者之间的区别：**

1. 共享锁（S锁）：如果事务T对数据A加上共享锁后，则其他事务只能对A再加共享锁，不 能加排他锁。获取共享锁的事务只能读数据，不能修改数据。
2. 排他锁（X锁）：如果事务T对数据A加上排他锁后，则其他事务不能再对A加任任何类型的封锁。获取排他锁的事务既能读数据，又能修改数据。

### 死锁和避免死锁 

MyISAM中是不会产生死锁的，因为MyISAM总是一次性获得所需的全部锁，要么全部满足，要么全部等待。而在InnoDB中，锁是逐步获得的，就造成了死锁的可能。

在MySQL中，行级锁并不是直接锁记录，而是锁索引。索引分为主键索引和非主键索引两种，如果一条SQL语句操作了主键索引，MySQL就会锁定这条主键索引；如果一条语句操作了非主键索引，MySQL会先锁定该非主键索引，再锁定相关的主键索引。 在UPDATE、DELETE操作时，MySQL不仅锁定WHERE条件扫描过的所有索引记录，而且会锁定相邻的键值，即所谓的next-key locking。

当两个事务同时执行，一个锁住了主键索引，在等待其他相关索引。另一个锁定了非主键索引，在等待主键索引。这样就会发生死锁。

发生死锁后，InnoDB一般都可以检测到，并使一个事务释放锁回退，另一个获取锁完成事务。

有多种方法可以避免死锁，这里只介绍常见的三种

1. 如果不同程序会并发存取多个表，尽量约定以相同的顺序访问表，可以大大降低死锁机会。
2. 在同一个事务中，尽可能做到一次锁定所需要的所有资源，减少死锁产生概率；
3. 对于非常容易产生死锁的业务部分，可以尝试使用升级锁定颗粒度，通过表级锁定来减少死锁产生的概率


------------
### 参考
**部分内容转载自Guide博客**

, typeId=3, firstPicture=http://47.93.123.42:80/upload/images/20200715/1594793427645_376.jpg, description=MySQL存储引擎,事务,锁机制总结。, recommend=false, published=false, shareStatement=true, appreciation=true, commentabled=true, updateTime=null)])
2021-03-29 15:06:48.925  INFO 20460 --- [http-nio-8080-exec-3] com.ljx.blog.config.LogConfig            : Result: redirect:/admin/blogs
2021-03-29 15:06:48.935  INFO 20460 --- [http-nio-8080-exec-10] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getBlogs, args=[1, {}])
2021-03-29 15:06:48.944  INFO 20460 --- [http-nio-8080-exec-10] com.ljx.blog.config.LogConfig            : Result: admin/blogs
2021-03-29 15:06:50.414  INFO 20460 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/2/input, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getUpdateBlog, args=[2, {}])
2021-03-29 15:06:50.422  INFO 20460 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Result: admin/blogs-input
2021-03-29 15:06:52.352  WARN 20460 --- [http-nio-8080-exec-9] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2021-03-29 15:06:52.354  INFO 20460 --- [http-nio-8080-exec-9] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/2, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.updateBlog, args=[2, {showBlog=ShowBlog(id=2, flag=1, title=数据库知识点复习, content=## MyISAM和InnoDB区别

​	MyISAM是MySQL的默认数据库引擎（5.5版之前）。虽然性能极佳，而且提供了大量的特性，包括全文索引、压缩、空间函数等，但MyISAM不支持事务和行级锁，而且最大的缺陷就是崩溃后无法安全恢复。不过，5.5版本之后，MySQL引入了InnoDB（事务性数据库引擎），MySQL 5.5版本后默认的存储引擎为InnoDB。

​	大多数时候我们使用的都是 InnoDB 存储引擎，但是在某些情况下使用 MyISAM 也是合适的比如读密集的情况下。（如果你不介意 MyISAM 崩溃恢复问题的话）。

**具体区别**

- **是否支持行级锁 :** MyISAM 只有表级锁(table-level locking)，而InnoDB 支持行级锁(row-level locking)和表级锁,默认为行级锁。
- **是否支持事务和崩溃后的安全恢复：** MyISAM 强调的是性能，每次查询具有原子性,其执行速度比InnoDB类型更快，但是不提供事务支持。但是InnoDB 提供事务支持事务，外部键等高级数据库功能。 具有事务(commit)、回滚(rollback)和崩溃修复能力(crash recovery capabilities)的事务安全(transaction-safe (ACID compliant))型表。
- **是否支持外键：** MyISAM不支持，而InnoDB支持。
- **是否支持MVCC：** 仅InnoDB 支持。应对高并发事务, MVCC比单纯的加锁更高效;MVCC只在 READ COMMITTED 和 REPEATABLE READ 两个隔离级别下工作;MVCC可以使用 乐观(optimistic)锁 和 悲观(pessimistic)锁来实现;各数据库中MVCC实现并不统一。

   MyISAM适合：(1) 做很多count 的计算；(2) 读密集；(3) 没有事务；
   InnoDB适合：(1) 要求事务；(2)写密集 ；(3) 高并发；

## 事物

### 什么是事务?

​	事务是逻辑上的一组操作，**要么都执行，要么都不执行**。

###          事物的四大特性 

- 原子性（Atomicity）： 事务是最小的执行单位，不允许分割。事务的原子性确保动作要么全部完成，要么完全不起作用；
- 一致性（Consistency）： 执行事务前后，数据保持一致，多个事务对同一个数据读取的结果是相同的；
- 隔离性（Isolation）： 并发访问数据库时，一个用户的事务不被其他事务所干扰，各并发事务之间数据库是独立的；
- 持久性（Durability）： 一个事务被提交之后。它对数据库中数据的改变是持久的，即使数据库发生故障也不应该对其有任何影响。

### 并发事务带来哪些问题?

- 脏读（Dirty read）: 一个事务读取了另一个事务修改但未提交的数据。
- 丢失修改（Lost to modify）: 一个事务连续读两次数据，但结果不一样。(两次读之间，数据被其他事务修改)。
- 不可重复读（Unrepeatableread）: 指在一个事务内多次读同一数据。在这个事务还没有结束时，另一个事务也访问该数据。那么，在第一个事务中的两次读数据之间，由于第二个事务的修改导致第一个事务两次读取的数据可能不太一样。这就发生了在一个事务内两次读到的数据是不一样的情况，因此称为不可重复读。
- 幻读（Phantom read）: 一个事务连续读两次数据，读取数据量不一样。(两次读之前，数据被其他事务删除或新增)。

### 事务隔离级别

- 读未提交: 可以读取尚未提交的数据。 **可能会导致脏读、幻读或不可重复读**。 
- 读已提交: 允许读取并发事务已经提交的数据。 **可以阻止脏读，但是幻读或不可重复读仍有可能发生**。 
- 可重复读: 对同一字段的多次读取结果都是一致的，除非数据是被本身事务自己所修改，可以阻止脏读和不可重复读，但幻读仍有可能发生。
  不可重复读很容易让人陷入一个思维定式那就是 我干嘛需要多次读取一个值还要保证一致要跳出这个思维看本质：我在事务中会不会受到其他事务的影响？
  举个简单的例子 数据校对（只是举个例子体现意思 不用太在意具体的业务）
  我要取当前的余额 当前的账单 上个月的余额 我要检验一下数据对不对
  我在事务中取了当前的账单和上个月的余额，好嘛，这时候又有新的订单提交了，我再获取余额是不是就不一致了？
- 串行化: 最高的隔离级别，完全服从ACID的隔离级别。所有的事务依次逐个执行，这样事务之间就完全不可能产生干扰，也就是说， **该级别可以防止脏读、不可重复读以及幻读**。 	

​    MySQL InnoDB默认支持可重复读，但使用了Next-Key Lock算法避免了幻读的发生。完全达到了保保证事务的隔离要求。但在分布式事务下，一般可串行化。

​	设置隔离级别之后，并不是不能并发，而是并发的时候，一个事务的修改数据(绝对读到，提交的才能读到。提交不提交，更新的数据都读不到。提交不提交，增删的数据都读不到)，什么时候才能被另一个事务读到。但彼此的逻辑操作没有影响。

## 锁机制

Mysql为了解决并发、数据安全的问题，使用了锁机制。

可以按照锁的粒度把数据库锁分为**表级锁和行级锁**。

### 按照锁的粒度分类

- 表级锁

Mysql中锁定 **粒度最大** 的一种锁，对当前操作的整张表加锁，实现简单 ，**资源消耗也比较少，加锁快，不会出现死锁 。**其锁定粒度最大，触发锁冲突的概率最高，并发度最低，MyISAM和 InnoDB引擎都支持表级锁。

- 行级锁

Mysql中锁定 **粒度最小** 的一种锁，只针对当前操作的行进行加锁。 行级锁能大大减少数据库操作的冲突。其加锁粒度最小，并发度高，**但加锁的开销也最大，加锁慢，会出现死锁。** InnoDB支持的行级锁，包括如下几种。

- Record Lock: 对索引项加锁，锁定符合条件的行。其他事务不能修改和删除加锁项；
- Gap Lock: 对索引项之间的“间隙”加锁，锁定记录的范围（对第一条记录前的间隙或最后一条将记录后的间隙加锁），不包含索引项本身。其他事务不能在锁范围内插入数据，这样就防止了别的事务新增幻影行。
- Next-key Lock： 锁定索引项本身和索引范围。即Record Lock和Gap Lock的结合。可解决幻读问题。

 **虽然使用行级索具有粒度小、并发度高等特点，但是表级锁有时候也是非常必要的**： 

- 事务更新大表中的大部分数据直接使用表级锁效率更高；
- 事务比较复杂，使用行级索很可能引起死锁导致回滚。

 **表级锁和行级锁可以进一步划分为共享锁（s）和排他锁（X）。** 

### 按照是否可写分类

**共享锁（s）**

**共享锁（Share Locks，简记为S）又被称为读锁**，其他用户可以并发读取数据，但任何事务都不能获取数据上的排他锁，直到已释放所有共享锁。

共享锁(S锁)又称为读锁，若事务T对数据对象A加上S锁，则事务T只能读A；其他事务只能再对A加S锁，而不能加X锁，直到T释放A上的S锁。这就保证了其他事务可以读A，但在T释放A上的S锁之前不能对A做任何修改。 

 **排他锁（X）：** 

排它锁（(Exclusive lock,简记为X锁)）又称为写锁，若事务T对数据对象A加上X锁，则只允许T读取和修改A，其它任何事务都不能再对A加任何类型的锁，直到T释放A上的锁。它防止任何其它事务获取资源上的锁，直到在事务的末尾将资源上的原始锁释放为止。在更新操作(INSERT、UPDATE 或 DELETE)过程中始终应用排它锁。

**两者之间的区别：**

1. 共享锁（S锁）：如果事务T对数据A加上共享锁后，则其他事务只能对A再加共享锁，不 能加排他锁。获取共享锁的事务只能读数据，不能修改数据。
2. 排他锁（X锁）：如果事务T对数据A加上排他锁后，则其他事务不能再对A加任任何类型的封锁。获取排他锁的事务既能读数据，又能修改数据。

### 死锁和避免死锁 

MyISAM中是不会产生死锁的，因为MyISAM总是一次性获得所需的全部锁，要么全部满足，要么全部等待。而在InnoDB中，锁是逐步获得的，就造成了死锁的可能。

在MySQL中，行级锁并不是直接锁记录，而是锁索引。索引分为主键索引和非主键索引两种，如果一条SQL语句操作了主键索引，MySQL就会锁定这条主键索引；如果一条语句操作了非主键索引，MySQL会先锁定该非主键索引，再锁定相关的主键索引。 在UPDATE、DELETE操作时，MySQL不仅锁定WHERE条件扫描过的所有索引记录，而且会锁定相邻的键值，即所谓的next-key locking。

当两个事务同时执行，一个锁住了主键索引，在等待其他相关索引。另一个锁定了非主键索引，在等待主键索引。这样就会发生死锁。

发生死锁后，InnoDB一般都可以检测到，并使一个事务释放锁回退，另一个获取锁完成事务。

有多种方法可以避免死锁，这里只介绍常见的三种

1. 如果不同程序会并发存取多个表，尽量约定以相同的顺序访问表，可以大大降低死锁机会。
2. 在同一个事务中，尽可能做到一次锁定所需要的所有资源，减少死锁产生概率；
3. 对于非常容易产生死锁的业务部分，可以尝试使用升级锁定颗粒度，通过表级锁定来减少死锁产生的概率


------------
### 参考
**部分内容转载自Guide博客**

, typeId=3, firstPicture=http://47.93.123.42:80/upload/images/20200715/1594793427645_376.jpg, description=MySQL存储引擎,事务,锁机制总结。, recommend=false, published=false, shareStatement=true, appreciation=true, commentabled=true, updateTime=null), org.springframework.validation.BindingResult.showBlog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, ShowBlog(id=2, flag=1, title=数据库知识点复习, content=## MyISAM和InnoDB区别

​	MyISAM是MySQL的默认数据库引擎（5.5版之前）。虽然性能极佳，而且提供了大量的特性，包括全文索引、压缩、空间函数等，但MyISAM不支持事务和行级锁，而且最大的缺陷就是崩溃后无法安全恢复。不过，5.5版本之后，MySQL引入了InnoDB（事务性数据库引擎），MySQL 5.5版本后默认的存储引擎为InnoDB。

​	大多数时候我们使用的都是 InnoDB 存储引擎，但是在某些情况下使用 MyISAM 也是合适的比如读密集的情况下。（如果你不介意 MyISAM 崩溃恢复问题的话）。

**具体区别**

- **是否支持行级锁 :** MyISAM 只有表级锁(table-level locking)，而InnoDB 支持行级锁(row-level locking)和表级锁,默认为行级锁。
- **是否支持事务和崩溃后的安全恢复：** MyISAM 强调的是性能，每次查询具有原子性,其执行速度比InnoDB类型更快，但是不提供事务支持。但是InnoDB 提供事务支持事务，外部键等高级数据库功能。 具有事务(commit)、回滚(rollback)和崩溃修复能力(crash recovery capabilities)的事务安全(transaction-safe (ACID compliant))型表。
- **是否支持外键：** MyISAM不支持，而InnoDB支持。
- **是否支持MVCC：** 仅InnoDB 支持。应对高并发事务, MVCC比单纯的加锁更高效;MVCC只在 READ COMMITTED 和 REPEATABLE READ 两个隔离级别下工作;MVCC可以使用 乐观(optimistic)锁 和 悲观(pessimistic)锁来实现;各数据库中MVCC实现并不统一。

   MyISAM适合：(1) 做很多count 的计算；(2) 读密集；(3) 没有事务；
   InnoDB适合：(1) 要求事务；(2)写密集 ；(3) 高并发；

## 事物

### 什么是事务?

​	事务是逻辑上的一组操作，**要么都执行，要么都不执行**。

###          事物的四大特性 

- 原子性（Atomicity）： 事务是最小的执行单位，不允许分割。事务的原子性确保动作要么全部完成，要么完全不起作用；
- 一致性（Consistency）： 执行事务前后，数据保持一致，多个事务对同一个数据读取的结果是相同的；
- 隔离性（Isolation）： 并发访问数据库时，一个用户的事务不被其他事务所干扰，各并发事务之间数据库是独立的；
- 持久性（Durability）： 一个事务被提交之后。它对数据库中数据的改变是持久的，即使数据库发生故障也不应该对其有任何影响。

### 并发事务带来哪些问题?

- 脏读（Dirty read）: 一个事务读取了另一个事务修改但未提交的数据。
- 丢失修改（Lost to modify）: 一个事务连续读两次数据，但结果不一样。(两次读之间，数据被其他事务修改)。
- 不可重复读（Unrepeatableread）: 指在一个事务内多次读同一数据。在这个事务还没有结束时，另一个事务也访问该数据。那么，在第一个事务中的两次读数据之间，由于第二个事务的修改导致第一个事务两次读取的数据可能不太一样。这就发生了在一个事务内两次读到的数据是不一样的情况，因此称为不可重复读。
- 幻读（Phantom read）: 一个事务连续读两次数据，读取数据量不一样。(两次读之前，数据被其他事务删除或新增)。

### 事务隔离级别

- 读未提交: 可以读取尚未提交的数据。 **可能会导致脏读、幻读或不可重复读**。 
- 读已提交: 允许读取并发事务已经提交的数据。 **可以阻止脏读，但是幻读或不可重复读仍有可能发生**。 
- 可重复读: 对同一字段的多次读取结果都是一致的，除非数据是被本身事务自己所修改，可以阻止脏读和不可重复读，但幻读仍有可能发生。
  不可重复读很容易让人陷入一个思维定式那就是 我干嘛需要多次读取一个值还要保证一致要跳出这个思维看本质：我在事务中会不会受到其他事务的影响？
  举个简单的例子 数据校对（只是举个例子体现意思 不用太在意具体的业务）
  我要取当前的余额 当前的账单 上个月的余额 我要检验一下数据对不对
  我在事务中取了当前的账单和上个月的余额，好嘛，这时候又有新的订单提交了，我再获取余额是不是就不一致了？
- 串行化: 最高的隔离级别，完全服从ACID的隔离级别。所有的事务依次逐个执行，这样事务之间就完全不可能产生干扰，也就是说， **该级别可以防止脏读、不可重复读以及幻读**。 	

​    MySQL InnoDB默认支持可重复读，但使用了Next-Key Lock算法避免了幻读的发生。完全达到了保保证事务的隔离要求。但在分布式事务下，一般可串行化。

​	设置隔离级别之后，并不是不能并发，而是并发的时候，一个事务的修改数据(绝对读到，提交的才能读到。提交不提交，更新的数据都读不到。提交不提交，增删的数据都读不到)，什么时候才能被另一个事务读到。但彼此的逻辑操作没有影响。

## 锁机制

Mysql为了解决并发、数据安全的问题，使用了锁机制。

可以按照锁的粒度把数据库锁分为**表级锁和行级锁**。

### 按照锁的粒度分类

- 表级锁

Mysql中锁定 **粒度最大** 的一种锁，对当前操作的整张表加锁，实现简单 ，**资源消耗也比较少，加锁快，不会出现死锁 。**其锁定粒度最大，触发锁冲突的概率最高，并发度最低，MyISAM和 InnoDB引擎都支持表级锁。

- 行级锁

Mysql中锁定 **粒度最小** 的一种锁，只针对当前操作的行进行加锁。 行级锁能大大减少数据库操作的冲突。其加锁粒度最小，并发度高，**但加锁的开销也最大，加锁慢，会出现死锁。** InnoDB支持的行级锁，包括如下几种。

- Record Lock: 对索引项加锁，锁定符合条件的行。其他事务不能修改和删除加锁项；
- Gap Lock: 对索引项之间的“间隙”加锁，锁定记录的范围（对第一条记录前的间隙或最后一条将记录后的间隙加锁），不包含索引项本身。其他事务不能在锁范围内插入数据，这样就防止了别的事务新增幻影行。
- Next-key Lock： 锁定索引项本身和索引范围。即Record Lock和Gap Lock的结合。可解决幻读问题。

 **虽然使用行级索具有粒度小、并发度高等特点，但是表级锁有时候也是非常必要的**： 

- 事务更新大表中的大部分数据直接使用表级锁效率更高；
- 事务比较复杂，使用行级索很可能引起死锁导致回滚。

 **表级锁和行级锁可以进一步划分为共享锁（s）和排他锁（X）。** 

### 按照是否可写分类

**共享锁（s）**

**共享锁（Share Locks，简记为S）又被称为读锁**，其他用户可以并发读取数据，但任何事务都不能获取数据上的排他锁，直到已释放所有共享锁。

共享锁(S锁)又称为读锁，若事务T对数据对象A加上S锁，则事务T只能读A；其他事务只能再对A加S锁，而不能加X锁，直到T释放A上的S锁。这就保证了其他事务可以读A，但在T释放A上的S锁之前不能对A做任何修改。 

 **排他锁（X）：** 

排它锁（(Exclusive lock,简记为X锁)）又称为写锁，若事务T对数据对象A加上X锁，则只允许T读取和修改A，其它任何事务都不能再对A加任何类型的锁，直到T释放A上的锁。它防止任何其它事务获取资源上的锁，直到在事务的末尾将资源上的原始锁释放为止。在更新操作(INSERT、UPDATE 或 DELETE)过程中始终应用排它锁。

**两者之间的区别：**

1. 共享锁（S锁）：如果事务T对数据A加上共享锁后，则其他事务只能对A再加共享锁，不 能加排他锁。获取共享锁的事务只能读数据，不能修改数据。
2. 排他锁（X锁）：如果事务T对数据A加上排他锁后，则其他事务不能再对A加任任何类型的封锁。获取排他锁的事务既能读数据，又能修改数据。

### 死锁和避免死锁 

MyISAM中是不会产生死锁的，因为MyISAM总是一次性获得所需的全部锁，要么全部满足，要么全部等待。而在InnoDB中，锁是逐步获得的，就造成了死锁的可能。

在MySQL中，行级锁并不是直接锁记录，而是锁索引。索引分为主键索引和非主键索引两种，如果一条SQL语句操作了主键索引，MySQL就会锁定这条主键索引；如果一条语句操作了非主键索引，MySQL会先锁定该非主键索引，再锁定相关的主键索引。 在UPDATE、DELETE操作时，MySQL不仅锁定WHERE条件扫描过的所有索引记录，而且会锁定相邻的键值，即所谓的next-key locking。

当两个事务同时执行，一个锁住了主键索引，在等待其他相关索引。另一个锁定了非主键索引，在等待主键索引。这样就会发生死锁。

发生死锁后，InnoDB一般都可以检测到，并使一个事务释放锁回退，另一个获取锁完成事务。

有多种方法可以避免死锁，这里只介绍常见的三种

1. 如果不同程序会并发存取多个表，尽量约定以相同的顺序访问表，可以大大降低死锁机会。
2. 在同一个事务中，尽可能做到一次锁定所需要的所有资源，减少死锁产生概率；
3. 对于非常容易产生死锁的业务部分，可以尝试使用升级锁定颗粒度，通过表级锁定来减少死锁产生的概率


------------
### 参考
**部分内容转载自Guide博客**

, typeId=3, firstPicture=http://47.93.123.42:80/upload/images/20200715/1594793427645_376.jpg, description=MySQL存储引擎,事务,锁机制总结。, recommend=false, published=false, shareStatement=true, appreciation=true, commentabled=true, updateTime=null)])
2021-03-29 15:06:52.361  INFO 20460 --- [http-nio-8080-exec-9] com.ljx.blog.config.LogConfig            : Result: redirect:/admin/blogs
2021-03-29 15:06:52.366  INFO 20460 --- [http-nio-8080-exec-6] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getBlogs, args=[1, {}])
2021-03-29 15:06:52.378  INFO 20460 --- [http-nio-8080-exec-6] com.ljx.blog.config.LogConfig            : Result: admin/blogs
2021-03-29 15:08:15.185  INFO 20460 --- [Thread-15] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2021-03-29 15:08:15.191  INFO 20460 --- [Thread-15] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closing ...
2021-03-29 15:08:15.194  INFO 20460 --- [Thread-15] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2021-03-29 15:08:15.542  INFO 20460 --- [restartedMain] com.ljx.blog.BlogApplication             : Starting BlogApplication using Java 1.8.0_271 on W10-20201212464 with PID 20460 (D:\UserData\Desktop\project\get-projiect\blog\target\classes started by Lin in D:\UserData\Desktop\project\get-projiect\blog)
2021-03-29 15:08:15.543  INFO 20460 --- [restartedMain] com.ljx.blog.BlogApplication             : The following profiles are active: dev
2021-03-29 15:08:15.957  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration$$EnhancerBySpringCGLIB$$79d18893] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:15.958  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration$$EnhancerBySpringCGLIB$$7c64c738] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:15.977  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'shiroConfig' of type [com.ljx.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$9d5495fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:15.992  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:15.996  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$998cfc13] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:15.999  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$8064a055] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:16.000  INFO 20460 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-03-29 15:08:16.006  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:16.009  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:16.013  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:16.103  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'wallConfig' of type [com.alibaba.druid.wall.WallConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:16.113  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'wallFilter' of type [com.alibaba.druid.wall.WallFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:16.197  INFO 20460 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2021-03-29 15:08:16.197  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:16.240  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:16.299  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:16.302  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:16.307  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:16.309  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userDao' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:16.311  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userServiceImpl' of type [com.ljx.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:16.312  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'getRealm' of type [com.ljx.blog.config.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:16.323  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'defaultWebSecurityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:16.334  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:16.340  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'eventBus' of type [org.apache.shiro.event.support.DefaultEventBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:16.506  INFO 20460 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-03-29 15:08:16.506  INFO 20460 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-03-29 15:08:16.507  INFO 20460 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.43]
2021-03-29 15:08:16.523  INFO 20460 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-03-29 15:08:16.523  INFO 20460 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 974 ms
2021-03-29 15:08:18.483  INFO 20460 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-03-29 15:08:18.671  INFO 20460 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-03-29 15:08:18.718  INFO 20460 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-03-29 15:08:19.229  INFO 20460 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-03-29 15:08:19.397  INFO 20460 --- [restartedMain] com.ljx.blog.BlogApplication             : Started BlogApplication in 3.901 seconds (JVM running for 300.162)
2021-03-29 15:08:19.399  INFO 20460 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2021-03-29 15:08:20.086  INFO 20460 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-03-29 15:08:20.087  INFO 20460 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-03-29 15:08:20.089  INFO 20460 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2021-03-29 15:08:20.096  INFO 20460 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/2/input, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getUpdateBlog, args=[2, {}])
2021-03-29 15:08:20.170  INFO 20460 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Result: admin/blogs-input
2021-03-29 15:08:27.218 ERROR 20460 --- [http-nio-8080-exec-1] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-1] Exception processing template "admin/blogs-input": An error happened during template parsing (template: "class path resource [templates/admin/blogs-input.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/admin/blogs-input.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:887)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1684)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "session.user.nickname" (template: "admin/_fragments" - line 18, col 19)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 62 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "session.user.nickname" (template: "admin/_fragments" - line 18, col 19)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 64 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'nickname' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 86 common frames omitted

2021-03-29 15:08:27.230 ERROR 20460 --- [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/admin/blogs-input.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'nickname' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1393)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1138)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1077)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:887)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1684)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2021-03-29 15:08:28.235  INFO 20460 --- [Thread-24] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2021-03-29 15:08:28.236  INFO 20460 --- [Thread-24] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} closing ...
2021-03-29 15:08:28.238  INFO 20460 --- [Thread-24] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} closed
2021-03-29 15:08:28.466  INFO 20460 --- [restartedMain] com.ljx.blog.BlogApplication             : Starting BlogApplication using Java 1.8.0_271 on W10-20201212464 with PID 20460 (D:\UserData\Desktop\project\get-projiect\blog\target\classes started by Lin in D:\UserData\Desktop\project\get-projiect\blog)
2021-03-29 15:08:28.467  INFO 20460 --- [restartedMain] com.ljx.blog.BlogApplication             : The following profiles are active: dev
2021-03-29 15:08:29.205  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration$$EnhancerBySpringCGLIB$$79d18893] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:29.206  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration$$EnhancerBySpringCGLIB$$7c64c738] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:29.228  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'shiroConfig' of type [com.ljx.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$9d5495fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:29.248  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:29.254  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$998cfc13] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:29.257  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$8064a055] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:29.258  INFO 20460 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-03-29 15:08:29.265  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:29.269  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:29.277  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:29.400  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'wallConfig' of type [com.alibaba.druid.wall.WallConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:29.412  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'wallFilter' of type [com.alibaba.druid.wall.WallFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:29.487  INFO 20460 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} inited
2021-03-29 15:08:29.487  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:29.526  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:29.586  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:29.589  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:29.595  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:29.597  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userDao' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:29.599  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userServiceImpl' of type [com.ljx.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:29.599  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'getRealm' of type [com.ljx.blog.config.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:29.610  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'defaultWebSecurityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:29.621  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:29.627  INFO 20460 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'eventBus' of type [org.apache.shiro.event.support.DefaultEventBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:08:29.775  INFO 20460 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-03-29 15:08:29.775  INFO 20460 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-03-29 15:08:29.775  INFO 20460 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.43]
2021-03-29 15:08:29.792  INFO 20460 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-03-29 15:08:29.792  INFO 20460 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1321 ms
2021-03-29 15:08:30.610  INFO 20460 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-03-29 15:08:30.667  INFO 20460 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-03-29 15:08:30.693  INFO 20460 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-03-29 15:08:31.121  INFO 20460 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-03-29 15:08:31.241  INFO 20460 --- [restartedMain] com.ljx.blog.BlogApplication             : Started BlogApplication in 2.816 seconds (JVM running for 312.006)
2021-03-29 15:08:31.243  INFO 20460 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2021-03-29 15:08:34.777  INFO 20460 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2021-03-29 15:08:34.781  INFO 20460 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} closing ...
2021-03-29 15:08:34.782  INFO 20460 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} closed
2021-03-29 15:11:53.501  INFO 18392 --- [restartedMain] com.ljx.blog.BlogApplication             : Starting BlogApplication using Java 1.8.0_271 on W10-20201212464 with PID 18392 (D:\UserData\Desktop\project\get-projiect\blog\target\classes started by Lin in D:\UserData\Desktop\project\get-projiect\blog)
2021-03-29 15:11:53.504  INFO 18392 --- [restartedMain] com.ljx.blog.BlogApplication             : The following profiles are active: dev
2021-03-29 15:11:53.574  INFO 18392 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-03-29 15:11:53.575  INFO 18392 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-03-29 15:11:54.610  INFO 18392 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration$$EnhancerBySpringCGLIB$$f52a793e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:11:54.624  INFO 18392 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration$$EnhancerBySpringCGLIB$$f7bdb7e3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:11:54.793  INFO 18392 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'shiroConfig' of type [com.ljx.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$18ad86a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:11:54.884  INFO 18392 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:11:54.893  INFO 18392 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$14e5ecbe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:11:54.899  INFO 18392 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$fbbd9100] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:11:54.901  INFO 18392 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-03-29 15:11:54.952  INFO 18392 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:11:54.960  INFO 18392 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:11:54.978  INFO 18392 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:11:55.073  INFO 18392 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'wallConfig' of type [com.alibaba.druid.wall.WallConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:11:55.084  INFO 18392 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'wallFilter' of type [com.alibaba.druid.wall.WallFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:11:55.215  INFO 18392 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-03-29 15:11:55.215  INFO 18392 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:11:55.255  INFO 18392 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:11:55.468  INFO 18392 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:11:55.474  INFO 18392 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:11:55.481  INFO 18392 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:11:55.485  INFO 18392 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userDao' of type [com.sun.proxy.$Proxy80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:11:55.493  INFO 18392 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userServiceImpl' of type [com.ljx.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:11:55.493  INFO 18392 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'getRealm' of type [com.ljx.blog.config.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:11:56.150  INFO 18392 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'defaultWebSecurityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:11:56.167  INFO 18392 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:11:56.180  INFO 18392 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'eventBus' of type [org.apache.shiro.event.support.DefaultEventBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 15:11:56.453  INFO 18392 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-03-29 15:11:56.464  INFO 18392 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-03-29 15:11:56.464  INFO 18392 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.43]
2021-03-29 15:11:56.536  INFO 18392 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-03-29 15:11:56.536  INFO 18392 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2960 ms
2021-03-29 15:11:57.573  INFO 18392 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-03-29 15:11:57.640  INFO 18392 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-03-29 15:11:57.683  INFO 18392 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-03-29 15:11:58.202  INFO 18392 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-03-29 15:11:58.480  INFO 18392 --- [restartedMain] com.ljx.blog.BlogApplication             : Started BlogApplication in 5.588 seconds (JVM running for 7.119)
2021-03-29 15:12:08.075  INFO 18392 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-03-29 15:12:08.076  INFO 18392 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-03-29 15:12:08.077  INFO 18392 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-03-29 15:12:08.121  INFO 18392 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.UserController.getLogin, args=[])
2021-03-29 15:12:08.124  INFO 18392 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Result: admin/login
2021-03-29 15:12:11.671  INFO 18392 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/login, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.UserController.login, args=[linjx, 1111, {}])
2021-03-29 15:12:12.358  INFO 18392 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Result: admin/index
2021-03-29 15:12:15.607  INFO 18392 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getBlogs, args=[1, {}])
2021-03-29 15:12:15.666  INFO 18392 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Result: admin/blogs
2021-03-29 15:12:17.538  INFO 18392 --- [http-nio-8080-exec-6] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/2/input, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getUpdateBlog, args=[2, {}])
2021-03-29 15:12:17.550  INFO 18392 --- [http-nio-8080-exec-6] com.ljx.blog.config.LogConfig            : Result: admin/blogs-input
2021-03-29 15:13:43.584  WARN 18392 --- [http-nio-8080-exec-9] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2021-03-29 15:13:43.593  INFO 18392 --- [http-nio-8080-exec-9] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/2, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.updateBlog, args=[2, {showBlog=ShowBlog(id=2, flag=1, title=数据库知识点复习, content=## MyISAM和InnoDB区别

​	MyISAM是MySQL的默认数据库引擎（5.5版之前）。虽然性能极佳，而且提供了大量的特性，包括全文索引、压缩、空间函数等，但MyISAM不支持事务和行级锁，而且最大的缺陷就是崩溃后无法安全恢复。不过，5.5版本之后，MySQL引入了InnoDB（事务性数据库引擎），MySQL 5.5版本后默认的存储引擎为InnoDB。

​	大多数时候我们使用的都是 InnoDB 存储引擎，但是在某些情况下使用 MyISAM 也是合适的比如读密集的情况下。（如果你不介意 MyISAM 崩溃恢复问题的话）。

**具体区别**

- **是否支持行级锁 :** MyISAM 只有表级锁(table-level locking)，而InnoDB 支持行级锁(row-level locking)和表级锁,默认为行级锁。
- **是否支持事务和崩溃后的安全恢复：** MyISAM 强调的是性能，每次查询具有原子性,其执行速度比InnoDB类型更快，但是不提供事务支持。但是InnoDB 提供事务支持事务，外部键等高级数据库功能。 具有事务(commit)、回滚(rollback)和崩溃修复能力(crash recovery capabilities)的事务安全(transaction-safe (ACID compliant))型表。
- **是否支持外键：** MyISAM不支持，而InnoDB支持。
- **是否支持MVCC：** 仅InnoDB 支持。应对高并发事务, MVCC比单纯的加锁更高效;MVCC只在 READ COMMITTED 和 REPEATABLE READ 两个隔离级别下工作;MVCC可以使用 乐观(optimistic)锁 和 悲观(pessimistic)锁来实现;各数据库中MVCC实现并不统一。

   MyISAM适合：(1) 做很多count 的计算；(2) 读密集；(3) 没有事务；
   InnoDB适合：(1) 要求事务；(2)写密集 ；(3) 高并发；

## 事物

### 什么是事务?

​	事务是逻辑上的一组操作，**要么都执行，要么都不执行**。

###          事物的四大特性 

- 原子性（Atomicity）： 事务是最小的执行单位，不允许分割。事务的原子性确保动作要么全部完成，要么完全不起作用；
- 一致性（Consistency）： 执行事务前后，数据保持一致，多个事务对同一个数据读取的结果是相同的；
- 隔离性（Isolation）： 并发访问数据库时，一个用户的事务不被其他事务所干扰，各并发事务之间数据库是独立的；
- 持久性（Durability）： 一个事务被提交之后。它对数据库中数据的改变是持久的，即使数据库发生故障也不应该对其有任何影响。

### 并发事务带来哪些问题?

- 脏读（Dirty read）: 一个事务读取了另一个事务修改但未提交的数据。
- 丢失修改（Lost to modify）: 一个事务连续读两次数据，但结果不一样。(两次读之间，数据被其他事务修改)。
- 不可重复读（Unrepeatableread）: 指在一个事务内多次读同一数据。在这个事务还没有结束时，另一个事务也访问该数据。那么，在第一个事务中的两次读数据之间，由于第二个事务的修改导致第一个事务两次读取的数据可能不太一样。这就发生了在一个事务内两次读到的数据是不一样的情况，因此称为不可重复读。
- 幻读（Phantom read）: 一个事务连续读两次数据，读取数据量不一样。(两次读之前，数据被其他事务删除或新增)。

### 事务隔离级别

- 读未提交: 可以读取尚未提交的数据。 **可能会导致脏读、幻读或不可重复读**。 
- 读已提交: 允许读取并发事务已经提交的数据。 **可以阻止脏读，但是幻读或不可重复读仍有可能发生**。 
- 可重复读: 对同一字段的多次读取结果都是一致的，除非数据是被本身事务自己所修改，可以阻止脏读和不可重复读，但幻读仍有可能发生。
  不可重复读很容易让人陷入一个思维定式那就是 我干嘛需要多次读取一个值还要保证一致要跳出这个思维看本质：我在事务中会不会受到其他事务的影响？
  举个简单的例子 数据校对（只是举个例子体现意思 不用太在意具体的业务）
  我要取当前的余额 当前的账单 上个月的余额 我要检验一下数据对不对
  我在事务中取了当前的账单和上个月的余额，好嘛，这时候又有新的订单提交了，我再获取余额是不是就不一致了？
- 串行化: 最高的隔离级别，完全服从ACID的隔离级别。所有的事务依次逐个执行，这样事务之间就完全不可能产生干扰，也就是说， **该级别可以防止脏读、不可重复读以及幻读**。 	

​    MySQL InnoDB默认支持可重复读，但使用了Next-Key Lock算法避免了幻读的发生。完全达到了保保证事务的隔离要求。但在分布式事务下，一般可串行化。

​	设置隔离级别之后，并不是不能并发，而是并发的时候，一个事务的修改数据(绝对读到，提交的才能读到。提交不提交，更新的数据都读不到。提交不提交，增删的数据都读不到)，什么时候才能被另一个事务读到。但彼此的逻辑操作没有影响。

## 锁机制

Mysql为了解决并发、数据安全的问题，使用了锁机制。

可以按照锁的粒度把数据库锁分为**表级锁和行级锁**。

### 按照锁的粒度分类

- 表级锁

Mysql中锁定 **粒度最大** 的一种锁，对当前操作的整张表加锁，实现简单 ，**资源消耗也比较少，加锁快，不会出现死锁 。**其锁定粒度最大，触发锁冲突的概率最高，并发度最低，MyISAM和 InnoDB引擎都支持表级锁。

- 行级锁

Mysql中锁定 **粒度最小** 的一种锁，只针对当前操作的行进行加锁。 行级锁能大大减少数据库操作的冲突。其加锁粒度最小，并发度高，**但加锁的开销也最大，加锁慢，会出现死锁。** InnoDB支持的行级锁，包括如下几种。

- Record Lock: 对索引项加锁，锁定符合条件的行。其他事务不能修改和删除加锁项；
- Gap Lock: 对索引项之间的“间隙”加锁，锁定记录的范围（对第一条记录前的间隙或最后一条将记录后的间隙加锁），不包含索引项本身。其他事务不能在锁范围内插入数据，这样就防止了别的事务新增幻影行。
- Next-key Lock： 锁定索引项本身和索引范围。即Record Lock和Gap Lock的结合。可解决幻读问题。

 **虽然使用行级索具有粒度小、并发度高等特点，但是表级锁有时候也是非常必要的**： 

- 事务更新大表中的大部分数据直接使用表级锁效率更高；
- 事务比较复杂，使用行级索很可能引起死锁导致回滚。

 **表级锁和行级锁可以进一步划分为共享锁（s）和排他锁（X）。** 

### 按照是否可写分类

**共享锁（s）**

**共享锁（Share Locks，简记为S）又被称为读锁**，其他用户可以并发读取数据，但任何事务都不能获取数据上的排他锁，直到已释放所有共享锁。

共享锁(S锁)又称为读锁，若事务T对数据对象A加上S锁，则事务T只能读A；其他事务只能再对A加S锁，而不能加X锁，直到T释放A上的S锁。这就保证了其他事务可以读A，但在T释放A上的S锁之前不能对A做任何修改。 

 **排他锁（X）：** 

排它锁（(Exclusive lock,简记为X锁)）又称为写锁，若事务T对数据对象A加上X锁，则只允许T读取和修改A，其它任何事务都不能再对A加任何类型的锁，直到T释放A上的锁。它防止任何其它事务获取资源上的锁，直到在事务的末尾将资源上的原始锁释放为止。在更新操作(INSERT、UPDATE 或 DELETE)过程中始终应用排它锁。

**两者之间的区别：**

1. 共享锁（S锁）：如果事务T对数据A加上共享锁后，则其他事务只能对A再加共享锁，不 能加排他锁。获取共享锁的事务只能读数据，不能修改数据。
2. 排他锁（X锁）：如果事务T对数据A加上排他锁后，则其他事务不能再对A加任任何类型的封锁。获取排他锁的事务既能读数据，又能修改数据。

### 死锁和避免死锁 

MyISAM中是不会产生死锁的，因为MyISAM总是一次性获得所需的全部锁，要么全部满足，要么全部等待。而在InnoDB中，锁是逐步获得的，就造成了死锁的可能。

在MySQL中，行级锁并不是直接锁记录，而是锁索引。索引分为主键索引和非主键索引两种，如果一条SQL语句操作了主键索引，MySQL就会锁定这条主键索引；如果一条语句操作了非主键索引，MySQL会先锁定该非主键索引，再锁定相关的主键索引。 在UPDATE、DELETE操作时，MySQL不仅锁定WHERE条件扫描过的所有索引记录，而且会锁定相邻的键值，即所谓的next-key locking。

当两个事务同时执行，一个锁住了主键索引，在等待其他相关索引。另一个锁定了非主键索引，在等待主键索引。这样就会发生死锁。

发生死锁后，InnoDB一般都可以检测到，并使一个事务释放锁回退，另一个获取锁完成事务。

有多种方法可以避免死锁，这里只介绍常见的三种

1. 如果不同程序会并发存取多个表，尽量约定以相同的顺序访问表，可以大大降低死锁机会。
2. 在同一个事务中，尽可能做到一次锁定所需要的所有资源，减少死锁产生概率；
3. 对于非常容易产生死锁的业务部分，可以尝试使用升级锁定颗粒度，通过表级锁定来减少死锁产生的概率

---
### 参考
**部分内容转载自Guide博客**

, typeId=3, firstPicture=http://47.93.123.42:80/upload/images/20200715/1594793427645_376.jpg, description=MySQL存储引擎,事务,锁机制总结。, recommend=false, published=true, shareStatement=true, appreciation=true, commentabled=true, updateTime=null), org.springframework.validation.BindingResult.showBlog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, ShowBlog(id=2, flag=1, title=数据库知识点复习, content=## MyISAM和InnoDB区别

​	MyISAM是MySQL的默认数据库引擎（5.5版之前）。虽然性能极佳，而且提供了大量的特性，包括全文索引、压缩、空间函数等，但MyISAM不支持事务和行级锁，而且最大的缺陷就是崩溃后无法安全恢复。不过，5.5版本之后，MySQL引入了InnoDB（事务性数据库引擎），MySQL 5.5版本后默认的存储引擎为InnoDB。

​	大多数时候我们使用的都是 InnoDB 存储引擎，但是在某些情况下使用 MyISAM 也是合适的比如读密集的情况下。（如果你不介意 MyISAM 崩溃恢复问题的话）。

**具体区别**

- **是否支持行级锁 :** MyISAM 只有表级锁(table-level locking)，而InnoDB 支持行级锁(row-level locking)和表级锁,默认为行级锁。
- **是否支持事务和崩溃后的安全恢复：** MyISAM 强调的是性能，每次查询具有原子性,其执行速度比InnoDB类型更快，但是不提供事务支持。但是InnoDB 提供事务支持事务，外部键等高级数据库功能。 具有事务(commit)、回滚(rollback)和崩溃修复能力(crash recovery capabilities)的事务安全(transaction-safe (ACID compliant))型表。
- **是否支持外键：** MyISAM不支持，而InnoDB支持。
- **是否支持MVCC：** 仅InnoDB 支持。应对高并发事务, MVCC比单纯的加锁更高效;MVCC只在 READ COMMITTED 和 REPEATABLE READ 两个隔离级别下工作;MVCC可以使用 乐观(optimistic)锁 和 悲观(pessimistic)锁来实现;各数据库中MVCC实现并不统一。

   MyISAM适合：(1) 做很多count 的计算；(2) 读密集；(3) 没有事务；
   InnoDB适合：(1) 要求事务；(2)写密集 ；(3) 高并发；

## 事物

### 什么是事务?

​	事务是逻辑上的一组操作，**要么都执行，要么都不执行**。

###          事物的四大特性 

- 原子性（Atomicity）： 事务是最小的执行单位，不允许分割。事务的原子性确保动作要么全部完成，要么完全不起作用；
- 一致性（Consistency）： 执行事务前后，数据保持一致，多个事务对同一个数据读取的结果是相同的；
- 隔离性（Isolation）： 并发访问数据库时，一个用户的事务不被其他事务所干扰，各并发事务之间数据库是独立的；
- 持久性（Durability）： 一个事务被提交之后。它对数据库中数据的改变是持久的，即使数据库发生故障也不应该对其有任何影响。

### 并发事务带来哪些问题?

- 脏读（Dirty read）: 一个事务读取了另一个事务修改但未提交的数据。
- 丢失修改（Lost to modify）: 一个事务连续读两次数据，但结果不一样。(两次读之间，数据被其他事务修改)。
- 不可重复读（Unrepeatableread）: 指在一个事务内多次读同一数据。在这个事务还没有结束时，另一个事务也访问该数据。那么，在第一个事务中的两次读数据之间，由于第二个事务的修改导致第一个事务两次读取的数据可能不太一样。这就发生了在一个事务内两次读到的数据是不一样的情况，因此称为不可重复读。
- 幻读（Phantom read）: 一个事务连续读两次数据，读取数据量不一样。(两次读之前，数据被其他事务删除或新增)。

### 事务隔离级别

- 读未提交: 可以读取尚未提交的数据。 **可能会导致脏读、幻读或不可重复读**。 
- 读已提交: 允许读取并发事务已经提交的数据。 **可以阻止脏读，但是幻读或不可重复读仍有可能发生**。 
- 可重复读: 对同一字段的多次读取结果都是一致的，除非数据是被本身事务自己所修改，可以阻止脏读和不可重复读，但幻读仍有可能发生。
  不可重复读很容易让人陷入一个思维定式那就是 我干嘛需要多次读取一个值还要保证一致要跳出这个思维看本质：我在事务中会不会受到其他事务的影响？
  举个简单的例子 数据校对（只是举个例子体现意思 不用太在意具体的业务）
  我要取当前的余额 当前的账单 上个月的余额 我要检验一下数据对不对
  我在事务中取了当前的账单和上个月的余额，好嘛，这时候又有新的订单提交了，我再获取余额是不是就不一致了？
- 串行化: 最高的隔离级别，完全服从ACID的隔离级别。所有的事务依次逐个执行，这样事务之间就完全不可能产生干扰，也就是说， **该级别可以防止脏读、不可重复读以及幻读**。 	

​    MySQL InnoDB默认支持可重复读，但使用了Next-Key Lock算法避免了幻读的发生。完全达到了保保证事务的隔离要求。但在分布式事务下，一般可串行化。

​	设置隔离级别之后，并不是不能并发，而是并发的时候，一个事务的修改数据(绝对读到，提交的才能读到。提交不提交，更新的数据都读不到。提交不提交，增删的数据都读不到)，什么时候才能被另一个事务读到。但彼此的逻辑操作没有影响。

## 锁机制

Mysql为了解决并发、数据安全的问题，使用了锁机制。

可以按照锁的粒度把数据库锁分为**表级锁和行级锁**。

### 按照锁的粒度分类

- 表级锁

Mysql中锁定 **粒度最大** 的一种锁，对当前操作的整张表加锁，实现简单 ，**资源消耗也比较少，加锁快，不会出现死锁 。**其锁定粒度最大，触发锁冲突的概率最高，并发度最低，MyISAM和 InnoDB引擎都支持表级锁。

- 行级锁

Mysql中锁定 **粒度最小** 的一种锁，只针对当前操作的行进行加锁。 行级锁能大大减少数据库操作的冲突。其加锁粒度最小，并发度高，**但加锁的开销也最大，加锁慢，会出现死锁。** InnoDB支持的行级锁，包括如下几种。

- Record Lock: 对索引项加锁，锁定符合条件的行。其他事务不能修改和删除加锁项；
- Gap Lock: 对索引项之间的“间隙”加锁，锁定记录的范围（对第一条记录前的间隙或最后一条将记录后的间隙加锁），不包含索引项本身。其他事务不能在锁范围内插入数据，这样就防止了别的事务新增幻影行。
- Next-key Lock： 锁定索引项本身和索引范围。即Record Lock和Gap Lock的结合。可解决幻读问题。

 **虽然使用行级索具有粒度小、并发度高等特点，但是表级锁有时候也是非常必要的**： 

- 事务更新大表中的大部分数据直接使用表级锁效率更高；
- 事务比较复杂，使用行级索很可能引起死锁导致回滚。

 **表级锁和行级锁可以进一步划分为共享锁（s）和排他锁（X）。** 

### 按照是否可写分类

**共享锁（s）**

**共享锁（Share Locks，简记为S）又被称为读锁**，其他用户可以并发读取数据，但任何事务都不能获取数据上的排他锁，直到已释放所有共享锁。

共享锁(S锁)又称为读锁，若事务T对数据对象A加上S锁，则事务T只能读A；其他事务只能再对A加S锁，而不能加X锁，直到T释放A上的S锁。这就保证了其他事务可以读A，但在T释放A上的S锁之前不能对A做任何修改。 

 **排他锁（X）：** 

排它锁（(Exclusive lock,简记为X锁)）又称为写锁，若事务T对数据对象A加上X锁，则只允许T读取和修改A，其它任何事务都不能再对A加任何类型的锁，直到T释放A上的锁。它防止任何其它事务获取资源上的锁，直到在事务的末尾将资源上的原始锁释放为止。在更新操作(INSERT、UPDATE 或 DELETE)过程中始终应用排它锁。

**两者之间的区别：**

1. 共享锁（S锁）：如果事务T对数据A加上共享锁后，则其他事务只能对A再加共享锁，不 能加排他锁。获取共享锁的事务只能读数据，不能修改数据。
2. 排他锁（X锁）：如果事务T对数据A加上排他锁后，则其他事务不能再对A加任任何类型的封锁。获取排他锁的事务既能读数据，又能修改数据。

### 死锁和避免死锁 

MyISAM中是不会产生死锁的，因为MyISAM总是一次性获得所需的全部锁，要么全部满足，要么全部等待。而在InnoDB中，锁是逐步获得的，就造成了死锁的可能。

在MySQL中，行级锁并不是直接锁记录，而是锁索引。索引分为主键索引和非主键索引两种，如果一条SQL语句操作了主键索引，MySQL就会锁定这条主键索引；如果一条语句操作了非主键索引，MySQL会先锁定该非主键索引，再锁定相关的主键索引。 在UPDATE、DELETE操作时，MySQL不仅锁定WHERE条件扫描过的所有索引记录，而且会锁定相邻的键值，即所谓的next-key locking。

当两个事务同时执行，一个锁住了主键索引，在等待其他相关索引。另一个锁定了非主键索引，在等待主键索引。这样就会发生死锁。

发生死锁后，InnoDB一般都可以检测到，并使一个事务释放锁回退，另一个获取锁完成事务。

有多种方法可以避免死锁，这里只介绍常见的三种

1. 如果不同程序会并发存取多个表，尽量约定以相同的顺序访问表，可以大大降低死锁机会。
2. 在同一个事务中，尽可能做到一次锁定所需要的所有资源，减少死锁产生概率；
3. 对于非常容易产生死锁的业务部分，可以尝试使用升级锁定颗粒度，通过表级锁定来减少死锁产生的概率

---
### 参考
**部分内容转载自Guide博客**

, typeId=3, firstPicture=http://47.93.123.42:80/upload/images/20200715/1594793427645_376.jpg, description=MySQL存储引擎,事务,锁机制总结。, recommend=false, published=true, shareStatement=true, appreciation=true, commentabled=true, updateTime=null)])
2021-03-29 15:13:43.607  WARN 18392 --- [http-nio-8080-exec-9] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/myblog?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8, version : 1.2.4, lastPacketReceivedIdleMillis : 86049
2021-03-29 15:13:43.655  INFO 18392 --- [http-nio-8080-exec-9] com.ljx.blog.config.LogConfig            : Result: redirect:/admin/blogs
2021-03-29 15:13:43.679  INFO 18392 --- [http-nio-8080-exec-10] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getBlogs, args=[1, {}])
2021-03-29 15:13:43.689  INFO 18392 --- [http-nio-8080-exec-10] com.ljx.blog.config.LogConfig            : Result: admin/blogs
2021-03-29 15:13:58.137  INFO 18392 --- [http-nio-8080-exec-4] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/3/input, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getUpdateBlog, args=[3, {}])
2021-03-29 15:13:58.146  INFO 18392 --- [http-nio-8080-exec-4] com.ljx.blog.config.LogConfig            : Result: admin/blogs-input
2021-03-29 15:14:18.862  WARN 18392 --- [http-nio-8080-exec-2] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2021-03-29 15:14:18.863  INFO 18392 --- [http-nio-8080-exec-2] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/3, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.updateBlog, args=[3, {showBlog=ShowBlog(id=3, flag=转载, title=LeetCode, content=## 121. 买卖股票的最佳时机

给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价格。

如果你最多只允许完成一笔交易（即买入和卖出一支股票一次），设计一个算法来计算你所能获取的最大利润。

注意：你不能在买入股票前卖出股票。

```
class Solution {
    public int maxProfit(int[] prices) {
        int cost = Integer.MAX_VALUE;
        int profit = 0;

        for(int price : prices){
            cost = Math.min(cost,price);
            profit = Math.max(profit, price - cost);
        }

        return profit;
    }
}
```
## 35. 搜索插入位置

给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。

你可以假设数组中无重复元素。

示例 1:

```
输入: [1,3,5,6], 5
输出: 2
```


示例 2:

```
输入: [1,3,5,6], 2
输出: 1
```


示例 3:

```
输入: [1,3,5,6], 7
输出: 4
```


示例 4:

```
输入: [1,3,5,6], 0
输出: 0
```

```
class Solution {
    public int searchInsert(int[] nums, int target) {
        int start = 0, end = nums.length - 1;
        while(start <= end){
            int mid = (start + end) >> 1;
            if(nums[mid] < target){
                start = mid + 1;
            } else if(nums[mid] == target){
               return mid;
            } else {
               end = mid - 1;
            }
        }
        return start;
    }
}
```
## 1115. 交替打印FooBar
我们提供一个类：
```
class FooBar {
  public void foo() {
    for (int i = 0; i < n; i++) {
      print("foo");
    }
  }

  public void bar() {
    for (int i = 0; i < n; i++) {
      print("bar");
    }
  }
}
```
两个不同的线程将会共用一个 FooBar 实例。其中一个线程将会调用 foo() 方法，另一个线程将会调用 bar() 方法。

请设计修改程序，以确保 "foobar" 被输出 n 次。
示例 1:
```
输入: n = 1
输出: "foobar"
解释: 这里有两个线程被异步启动。其中一个调用 foo() 方法, 另一个调用 bar() 方法，"foobar" 将被输出一次。
```
```
class FooBar {
    private int n;

    Semaphore s1 = new Semaphore(1);
    Semaphore s2 = new Semaphore(0);

    public FooBar(int n) {
        this.n = n;
    }

    public void foo(Runnable printFoo) throws InterruptedException {
        
        for (int i = 0; i < n; i++) {
            s1.acquire();
        	printFoo.run();
            s2.release();
        }
    }

    public void bar(Runnable printBar) throws InterruptedException {
        
        for (int i = 0; i < n; i++) {
            s2.acquire();
        	printBar.run();
            s1.release();
        }
    }
}
```
补充一个交替打印奇偶:
```
public class FooBar {
	static int i = 0;
	public static void main(String[] args) throws InterruptedException {

		Semaphore Odd = new Semaphore(1);
		Semaphore even = new Semaphore(0);

		Thread t1 = new Thread(() -> {
			try {
				Odd.acquire();
				while (true) {
					i++;
					if (i % 2 == 1){
						System.out.println("奇数线程:" + " " + i);
						even.release();
						Odd.acquire();
					}
				}
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		});

		Thread t2 = new Thread(() -> {
			try {
				even.acquire();
				while (true) {
					i++;
					if (i % 2 == 0){
						System.out.println("偶数线程:" + " " + i);
						Odd.release();
						even.acquire();
					}
				}
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		});

		t2.start();
		t1.start();
	}
}
```
## 剑指 Offer 31. 栈的压入、弹出序列
输入两个整数序列，第一个序列表示栈的压入顺序，请判断第二个序列是否为该栈的弹出顺序。假设压入栈的所有数字均不相等。例如，序列 {1,2,3,4,5} 是某栈的压栈序列，序列 {4,5,3,2,1} 是该压栈序列对应的一个弹出序列，但 {4,3,5,1,2} 就不可能是该压栈序列的弹出序列。
```
class Solution {
    public boolean validateStackSequences(int[] pushed, int[] popped) {
        Stack<Integer> stack = new Stack<>();
        int i = 0;
        for(int p : pushed){
            stack.add(p);
            while(!stack.isEmpty() && stack.peek() == popped[i]){
                stack.pop();
                i++;
            }
        }
        return stack.isEmpty();
    }
}
```

, typeId=62, firstPicture=http://47.93.123.42:80/upload/images/20200716/1594921730619_445.png, description=记录下刷题过程,后续给博客加个目录方便查找!, recommend=true, published=false, shareStatement=true, appreciation=true, commentabled=true, updateTime=null), org.springframework.validation.BindingResult.showBlog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, ShowBlog(id=3, flag=转载, title=LeetCode, content=## 121. 买卖股票的最佳时机

给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价格。

如果你最多只允许完成一笔交易（即买入和卖出一支股票一次），设计一个算法来计算你所能获取的最大利润。

注意：你不能在买入股票前卖出股票。

```
class Solution {
    public int maxProfit(int[] prices) {
        int cost = Integer.MAX_VALUE;
        int profit = 0;

        for(int price : prices){
            cost = Math.min(cost,price);
            profit = Math.max(profit, price - cost);
        }

        return profit;
    }
}
```
## 35. 搜索插入位置

给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。

你可以假设数组中无重复元素。

示例 1:

```
输入: [1,3,5,6], 5
输出: 2
```


示例 2:

```
输入: [1,3,5,6], 2
输出: 1
```


示例 3:

```
输入: [1,3,5,6], 7
输出: 4
```


示例 4:

```
输入: [1,3,5,6], 0
输出: 0
```

```
class Solution {
    public int searchInsert(int[] nums, int target) {
        int start = 0, end = nums.length - 1;
        while(start <= end){
            int mid = (start + end) >> 1;
            if(nums[mid] < target){
                start = mid + 1;
            } else if(nums[mid] == target){
               return mid;
            } else {
               end = mid - 1;
            }
        }
        return start;
    }
}
```
## 1115. 交替打印FooBar
我们提供一个类：
```
class FooBar {
  public void foo() {
    for (int i = 0; i < n; i++) {
      print("foo");
    }
  }

  public void bar() {
    for (int i = 0; i < n; i++) {
      print("bar");
    }
  }
}
```
两个不同的线程将会共用一个 FooBar 实例。其中一个线程将会调用 foo() 方法，另一个线程将会调用 bar() 方法。

请设计修改程序，以确保 "foobar" 被输出 n 次。
示例 1:
```
输入: n = 1
输出: "foobar"
解释: 这里有两个线程被异步启动。其中一个调用 foo() 方法, 另一个调用 bar() 方法，"foobar" 将被输出一次。
```
```
class FooBar {
    private int n;

    Semaphore s1 = new Semaphore(1);
    Semaphore s2 = new Semaphore(0);

    public FooBar(int n) {
        this.n = n;
    }

    public void foo(Runnable printFoo) throws InterruptedException {
        
        for (int i = 0; i < n; i++) {
            s1.acquire();
        	printFoo.run();
            s2.release();
        }
    }

    public void bar(Runnable printBar) throws InterruptedException {
        
        for (int i = 0; i < n; i++) {
            s2.acquire();
        	printBar.run();
            s1.release();
        }
    }
}
```
补充一个交替打印奇偶:
```
public class FooBar {
	static int i = 0;
	public static void main(String[] args) throws InterruptedException {

		Semaphore Odd = new Semaphore(1);
		Semaphore even = new Semaphore(0);

		Thread t1 = new Thread(() -> {
			try {
				Odd.acquire();
				while (true) {
					i++;
					if (i % 2 == 1){
						System.out.println("奇数线程:" + " " + i);
						even.release();
						Odd.acquire();
					}
				}
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		});

		Thread t2 = new Thread(() -> {
			try {
				even.acquire();
				while (true) {
					i++;
					if (i % 2 == 0){
						System.out.println("偶数线程:" + " " + i);
						Odd.release();
						even.acquire();
					}
				}
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		});

		t2.start();
		t1.start();
	}
}
```
## 剑指 Offer 31. 栈的压入、弹出序列
输入两个整数序列，第一个序列表示栈的压入顺序，请判断第二个序列是否为该栈的弹出顺序。假设压入栈的所有数字均不相等。例如，序列 {1,2,3,4,5} 是某栈的压栈序列，序列 {4,5,3,2,1} 是该压栈序列对应的一个弹出序列，但 {4,3,5,1,2} 就不可能是该压栈序列的弹出序列。
```
class Solution {
    public boolean validateStackSequences(int[] pushed, int[] popped) {
        Stack<Integer> stack = new Stack<>();
        int i = 0;
        for(int p : pushed){
            stack.add(p);
            while(!stack.isEmpty() && stack.peek() == popped[i]){
                stack.pop();
                i++;
            }
        }
        return stack.isEmpty();
    }
}
```

, typeId=62, firstPicture=http://47.93.123.42:80/upload/images/20200716/1594921730619_445.png, description=记录下刷题过程,后续给博客加个目录方便查找!, recommend=true, published=false, shareStatement=true, appreciation=true, commentabled=true, updateTime=null)])
2021-03-29 15:14:18.871  INFO 18392 --- [http-nio-8080-exec-2] com.ljx.blog.config.LogConfig            : Result: redirect:/admin/blogs
2021-03-29 15:14:18.878  INFO 18392 --- [http-nio-8080-exec-7] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getBlogs, args=[1, {}])
2021-03-29 15:14:18.887  INFO 18392 --- [http-nio-8080-exec-7] com.ljx.blog.config.LogConfig            : Result: admin/blogs
2021-03-29 15:15:09.843  INFO 18392 --- [http-nio-8080-exec-2] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getBlogs, args=[1, {}])
2021-03-29 15:15:09.858  INFO 18392 --- [http-nio-8080-exec-2] com.ljx.blog.config.LogConfig            : Result: admin/blogs
2021-03-29 15:15:11.245  INFO 18392 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/types, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.TypeController.getType, args=[1, {}])
2021-03-29 15:15:11.259  INFO 18392 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Result: admin/types
2021-03-29 15:15:14.674  INFO 18392 --- [http-nio-8080-exec-2] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/types, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.TypeController.getType, args=[1, {}])
2021-03-29 15:15:14.680  INFO 18392 --- [http-nio-8080-exec-2] com.ljx.blog.config.LogConfig            : Result: admin/types
2021-03-29 15:15:15.636  INFO 18392 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getBlogs, args=[1, {}])
2021-03-29 15:15:15.648  INFO 18392 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Result: admin/blogs
2021-03-29 15:15:36.888  INFO 18392 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2021-03-29 15:15:36.892  INFO 18392 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closing ...
2021-03-29 15:15:36.895  INFO 18392 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2021-03-29 16:43:18.397  INFO 18072 --- [restartedMain] com.ljx.blog.BlogApplication             : Starting BlogApplication using Java 1.8.0_271 on W10-20201212464 with PID 18072 (D:\UserData\Desktop\project\get-projiect\blog\target\classes started by Lin in D:\UserData\Desktop\project\get-projiect\blog)
2021-03-29 16:43:18.399  INFO 18072 --- [restartedMain] com.ljx.blog.BlogApplication             : The following profiles are active: dev
2021-03-29 16:43:18.453  INFO 18072 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-03-29 16:43:18.454  INFO 18072 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-03-29 16:43:19.442  INFO 18072 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration$$EnhancerBySpringCGLIB$$926db170] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:43:19.453  INFO 18072 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration$$EnhancerBySpringCGLIB$$9500f015] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:43:19.622  INFO 18072 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'shiroConfig' of type [com.ljx.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$b5f0bed7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:43:19.707  INFO 18072 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:43:19.715  INFO 18072 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$b22924f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:43:19.721  INFO 18072 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$9900c932] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:43:19.723  INFO 18072 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-03-29 16:43:19.770  INFO 18072 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:43:19.779  INFO 18072 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:43:19.798  INFO 18072 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:43:19.891  INFO 18072 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'wallConfig' of type [com.alibaba.druid.wall.WallConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:43:19.903  INFO 18072 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'wallFilter' of type [com.alibaba.druid.wall.WallFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:43:19.999  INFO 18072 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-03-29 16:43:20.000  INFO 18072 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:43:20.054  INFO 18072 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:43:20.253  INFO 18072 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:43:20.259  INFO 18072 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:43:20.265  INFO 18072 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:43:20.268  INFO 18072 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userDao' of type [com.sun.proxy.$Proxy80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:43:20.276  INFO 18072 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userServiceImpl' of type [com.ljx.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:43:20.276  INFO 18072 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'getRealm' of type [com.ljx.blog.config.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:43:20.943  INFO 18072 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'defaultWebSecurityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:43:20.959  INFO 18072 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:43:20.972  INFO 18072 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'eventBus' of type [org.apache.shiro.event.support.DefaultEventBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:43:21.242  INFO 18072 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-03-29 16:43:21.252  INFO 18072 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-03-29 16:43:21.252  INFO 18072 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.43]
2021-03-29 16:43:21.325  INFO 18072 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-03-29 16:43:21.325  INFO 18072 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2870 ms
2021-03-29 16:43:22.368  INFO 18072 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-03-29 16:43:22.437  INFO 18072 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-03-29 16:43:22.477  INFO 18072 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-03-29 16:43:22.981  INFO 18072 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-03-29 16:43:23.269  INFO 18072 --- [restartedMain] com.ljx.blog.BlogApplication             : Started BlogApplication in 5.383 seconds (JVM running for 8.624)
2021-03-29 16:45:46.826  INFO 18072 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-03-29 16:45:46.826  INFO 18072 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-03-29 16:45:46.829  INFO 18072 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2021-03-29 16:45:46.881  INFO 18072 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.IndexController.index, args=[])
2021-03-29 16:45:46.890  INFO 18072 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Result: index
2021-03-29 16:45:50.659  INFO 18072 --- [http-nio-8080-exec-4] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.UserController.getLogin, args=[])
2021-03-29 16:45:50.662  INFO 18072 --- [http-nio-8080-exec-4] com.ljx.blog.config.LogConfig            : Result: admin/login
2021-03-29 16:45:54.692  INFO 18072 --- [http-nio-8080-exec-8] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/login, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.UserController.login, args=[linjx, 1111, {}])
2021-03-29 16:45:55.348  INFO 18072 --- [http-nio-8080-exec-8] com.ljx.blog.config.LogConfig            : Result: admin/index
2021-03-29 16:45:59.964  INFO 18072 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getBlogs, args=[1, {}])
2021-03-29 16:46:00.027  INFO 18072 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Result: admin/blogs
2021-03-29 16:46:01.826 ERROR 18072 --- [http-nio-8080-exec-9] c.l.b.h.ControllerExceptionHandler       : Request url : /admin/blogs/input, Exception : {}

org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:250)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:373)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:123)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:66)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:491)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1254)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1036)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:887)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1684)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2021-03-29 16:46:01.827  WARN 18072 --- [http-nio-8080-exec-9] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
2021-03-29 16:47:48.893  INFO 18072 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.IndexController.index, args=[])
2021-03-29 16:47:48.893  INFO 18072 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Result: index
2021-03-29 16:47:53.894  INFO 18072 --- [http-nio-8080-exec-4] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.UserController.getLogin, args=[])
2021-03-29 16:47:53.894  INFO 18072 --- [http-nio-8080-exec-4] com.ljx.blog.config.LogConfig            : Result: admin/login
2021-03-29 16:47:56.583  INFO 18072 --- [http-nio-8080-exec-6] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/login, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.UserController.login, args=[linjx, 111, {}])
2021-03-29 16:47:56.595  WARN 18072 --- [http-nio-8080-exec-6] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/myblog?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8, version : 1.2.4, lastPacketReceivedIdleMillis : 116558
2021-03-29 16:47:56.634  INFO 18072 --- [http-nio-8080-exec-6] com.ljx.blog.config.LogConfig            : Result: redirect:/admin
2021-03-29 16:47:56.655  INFO 18072 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.UserController.getLogin, args=[])
2021-03-29 16:47:56.655  INFO 18072 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Result: admin/login
2021-03-29 16:48:00.082  INFO 18072 --- [http-nio-8080-exec-2] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/login, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.UserController.login, args=[linjx, 1111, {}])
2021-03-29 16:48:00.085  INFO 18072 --- [http-nio-8080-exec-2] com.ljx.blog.config.LogConfig            : Result: admin/index
2021-03-29 16:48:01.786  INFO 18072 --- [http-nio-8080-exec-6] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getBlogs, args=[1, {}])
2021-03-29 16:48:01.800  INFO 18072 --- [http-nio-8080-exec-6] com.ljx.blog.config.LogConfig            : Result: admin/blogs
2021-03-29 16:48:04.586  INFO 18072 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/4/input, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getUpdateBlog, args=[4, {}])
2021-03-29 16:48:04.595  INFO 18072 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Result: admin/blogs-input
2021-03-29 16:54:44.030  INFO 18072 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2021-03-29 16:54:44.033  INFO 18072 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closing ...
2021-03-29 16:54:44.035  INFO 18072 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2021-03-29 16:56:22.070  INFO 6116 --- [restartedMain] com.ljx.blog.BlogApplication             : Starting BlogApplication using Java 1.8.0_271 on W10-20201212464 with PID 6116 (D:\UserData\Desktop\project\get-projiect\blog\target\classes started by Lin in D:\UserData\Desktop\project\get-projiect\blog)
2021-03-29 16:56:22.072  INFO 6116 --- [restartedMain] com.ljx.blog.BlogApplication             : The following profiles are active: dev
2021-03-29 16:56:22.134  INFO 6116 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-03-29 16:56:22.134  INFO 6116 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-03-29 16:56:23.087  INFO 6116 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration$$EnhancerBySpringCGLIB$$25513b5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:56:23.100  INFO 6116 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration$$EnhancerBySpringCGLIB$$27e47a04] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:56:23.252  INFO 6116 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'shiroConfig' of type [com.ljx.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$48d448c6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:56:23.320  INFO 6116 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:56:23.333  INFO 6116 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$450caedf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:56:23.343  INFO 6116 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$2be45321] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:56:23.345  INFO 6116 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-03-29 16:56:23.387  INFO 6116 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:56:23.399  INFO 6116 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:56:23.417  INFO 6116 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:56:23.510  INFO 6116 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'wallConfig' of type [com.alibaba.druid.wall.WallConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:56:23.522  INFO 6116 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'wallFilter' of type [com.alibaba.druid.wall.WallFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:56:23.632  INFO 6116 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-03-29 16:56:23.632  INFO 6116 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:56:23.669  INFO 6116 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:56:23.813  INFO 6116 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:56:23.817  INFO 6116 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:56:23.821  INFO 6116 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:56:23.824  INFO 6116 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userDao' of type [com.sun.proxy.$Proxy80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:56:23.828  INFO 6116 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userServiceImpl' of type [com.ljx.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:56:23.829  INFO 6116 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'getRealm' of type [com.ljx.blog.config.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:56:24.546  INFO 6116 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'defaultWebSecurityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:56:24.560  INFO 6116 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:56:24.570  INFO 6116 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'eventBus' of type [org.apache.shiro.event.support.DefaultEventBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:56:24.800  INFO 6116 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-03-29 16:56:24.808  INFO 6116 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-03-29 16:56:24.808  INFO 6116 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.43]
2021-03-29 16:56:24.881  INFO 6116 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-03-29 16:56:24.881  INFO 6116 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2746 ms
2021-03-29 16:56:25.675  INFO 6116 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-03-29 16:56:25.736  INFO 6116 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-03-29 16:56:25.767  INFO 6116 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-03-29 16:56:26.167  INFO 6116 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-03-29 16:56:26.409  INFO 6116 --- [restartedMain] com.ljx.blog.BlogApplication             : Started BlogApplication in 5.09 seconds (JVM running for 7.453)
2021-03-29 16:56:27.570  INFO 6116 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-03-29 16:56:27.571  INFO 6116 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-03-29 16:56:27.574  INFO 6116 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 3 ms
2021-03-29 16:56:27.611  INFO 6116 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.IndexController.index, args=[])
2021-03-29 16:56:27.614  INFO 6116 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Result: index
2021-03-29 16:56:51.467  INFO 6116 --- [http-nio-8080-exec-7] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.UserController.getLogin, args=[])
2021-03-29 16:56:51.471  INFO 6116 --- [http-nio-8080-exec-7] com.ljx.blog.config.LogConfig            : Result: admin/login
2021-03-29 16:56:55.715  INFO 6116 --- [http-nio-8080-exec-10] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/login, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.UserController.login, args=[linjx, 1111, {}])
2021-03-29 16:56:56.331  INFO 6116 --- [http-nio-8080-exec-10] com.ljx.blog.config.LogConfig            : Result: admin/index
2021-03-29 16:56:57.711  INFO 6116 --- [http-nio-8080-exec-8] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getBlogs, args=[1, {}])
2021-03-29 16:56:57.765  INFO 6116 --- [http-nio-8080-exec-8] com.ljx.blog.config.LogConfig            : Result: admin/blogs
2021-03-29 16:57:00.275 ERROR 6116 --- [http-nio-8080-exec-1] c.l.b.h.ControllerExceptionHandler       : Request url : /admin/blogs/input, Exception : {}

org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:250)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:373)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:123)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:66)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:491)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1254)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1036)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:887)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1684)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2021-03-29 16:57:00.276  WARN 6116 --- [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
2021-03-29 16:57:04.774 ERROR 6116 --- [http-nio-8080-exec-6] c.l.b.h.ControllerExceptionHandler       : Request url : /admin/blogs/input, Exception : {}

org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:250)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:432)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:373)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:123)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:66)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:491)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1254)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1036)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:887)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1684)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2021-03-29 16:57:04.774  WARN 6116 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
2021-03-29 16:58:22.001  INFO 13684 --- [restartedMain] com.ljx.blog.BlogApplication             : Starting BlogApplication using Java 1.8.0_271 on W10-20201212464 with PID 13684 (D:\UserData\Desktop\project\get-projiect\blog\target\classes started by Lin in D:\UserData\Desktop\project\get-projiect\blog)
2021-03-29 16:58:22.003  INFO 13684 --- [restartedMain] com.ljx.blog.BlogApplication             : The following profiles are active: dev
2021-03-29 16:58:22.060  INFO 13684 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-03-29 16:58:22.061  INFO 13684 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-03-29 16:58:23.055  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration$$EnhancerBySpringCGLIB$$99fd5c38] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:58:23.068  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration$$EnhancerBySpringCGLIB$$9c909add] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:58:23.235  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'shiroConfig' of type [com.ljx.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$bd80699f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:58:23.330  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:58:23.345  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$b9b8cfb8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:58:23.353  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$a09073fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:58:23.355  INFO 13684 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-03-29 16:58:23.410  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:58:23.419  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:58:23.439  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:58:23.533  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'wallConfig' of type [com.alibaba.druid.wall.WallConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:58:23.547  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'wallFilter' of type [com.alibaba.druid.wall.WallFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:58:23.667  INFO 13684 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-03-29 16:58:23.667  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:58:23.704  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:58:23.926  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:58:23.931  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:58:23.937  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:58:23.940  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userDao' of type [com.sun.proxy.$Proxy80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:58:23.945  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userServiceImpl' of type [com.ljx.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:58:23.946  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'getRealm' of type [com.ljx.blog.config.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:58:24.607  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'defaultWebSecurityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:58:24.623  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:58:24.636  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'eventBus' of type [org.apache.shiro.event.support.DefaultEventBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 16:58:24.917  INFO 13684 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-03-29 16:58:24.930  INFO 13684 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-03-29 16:58:24.930  INFO 13684 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.43]
2021-03-29 16:58:25.015  INFO 13684 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-03-29 16:58:25.015  INFO 13684 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2953 ms
2021-03-29 16:58:26.032  INFO 13684 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-03-29 16:58:26.100  INFO 13684 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-03-29 16:58:26.140  INFO 13684 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-03-29 16:58:26.647  INFO 13684 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-03-29 16:58:26.946  INFO 13684 --- [restartedMain] com.ljx.blog.BlogApplication             : Started BlogApplication in 5.613 seconds (JVM running for 7.121)
2021-03-29 16:58:33.142  INFO 13684 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-03-29 16:58:33.143  INFO 13684 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-03-29 16:58:33.144  INFO 13684 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-03-29 16:58:33.198  INFO 13684 --- [http-nio-8080-exec-2] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.UserController.getLogin, args=[])
2021-03-29 16:58:33.202  INFO 13684 --- [http-nio-8080-exec-2] com.ljx.blog.config.LogConfig            : Result: admin/login
2021-03-29 16:58:36.253  INFO 13684 --- [http-nio-8080-exec-6] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/login, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.UserController.login, args=[linjx, 1111, {}])
2021-03-29 16:58:36.880  INFO 13684 --- [http-nio-8080-exec-6] com.ljx.blog.config.LogConfig            : Result: admin/index
2021-03-29 16:58:40.049  INFO 13684 --- [http-nio-8080-exec-2] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getBlogs, args=[1, {}])
2021-03-29 16:58:40.108  INFO 13684 --- [http-nio-8080-exec-2] com.ljx.blog.config.LogConfig            : Result: admin/blogs
2021-03-29 16:58:41.880  INFO 13684 --- [http-nio-8080-exec-7] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/input, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getAddBlog, args=[{}])
2021-03-29 16:58:41.886  INFO 13684 --- [http-nio-8080-exec-7] com.ljx.blog.config.LogConfig            : Result: admin/blogs-input
2021-03-29 16:59:37.910  INFO 13684 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/1/input, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getUpdateBlog, args=[1, {}])
2021-03-29 16:59:37.923  INFO 13684 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Result: admin/blogs-input
2021-03-29 16:59:46.697  INFO 13684 --- [http-nio-8080-exec-6] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/input, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getAddBlog, args=[{}])
2021-03-29 16:59:46.700  INFO 13684 --- [http-nio-8080-exec-6] com.ljx.blog.config.LogConfig            : Result: admin/blogs-input
2021-03-29 17:09:46.380  INFO 13684 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.addBlog, args=[Blog(id=null, title=Redis五大类型常用命令, content=# String类型

字符串类型是 Redis 最基础的数据结构，首先键都是字符串类型， Value 不仅是 String，也可以是数字。常用在缓存、计数、共享Session、限速等。

- `set key value`增加数据

- `get key`获得数据

- `append key value`追加字符串，如果当前key不存在，则等同于`set key value`

- `strlen key`获取字符串长度

- `keys *`获取所有key

- `exists key`判断某个key是否存在

- `incr key`自增+1，等同于`i++`

- `decr key`自减-1，等同于`i—`

- `incrby key 5`步长，指定增量，等同于`i+=5`

- `decrby key 5`步长，指定减量，等同于`i-=5`

- `getrange key start end`截取字符串

- `setrange key offset value`替换字符串

- `setex key seconds value`设置过期时间

- `setnx key value`不存在再设置(分布式锁会经常用到)

- `mset key value [key value ...]`批量增加数据

- `msetnx key value [key value ...]`**不存在**则批量增加数据，该命令为原子性操作

![](https://img-blog.csdnimg.cn/20210129175159455.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZhbmppYW5oYWk=,size_16,color_FFFFFF,t_70)

![](https://img-blog.csdnimg.cn/20210129175758791.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZhbmppYW5oYWk=,size_16,color_FFFFFF,t_70)

---

# List（列表）类型

列表（list）类型是用来存储多个有序的字符串。可以做简单的消息队列的功能。 数据结构：List 就是链表，可以用来当消息队列用。Redis 提供了 List 的 Push 和 Pop 操作，还提供了操作某一段的 API，可以直接查询或者删除某一段的元素。 实现方式：Redis List 的是实现是一个双向链表，既可以支持反向查找和遍历，更方便操作，不过带来了额外的内存开销。 

- `lpush key element [element ...]`增加List数组

- `lrange key start stop`读取list数组

- `lindex key index`读取指定数组指定下标的元素

- `llen key`获取数组长度

- `rpush key element [element ...]`往指定数组末尾添加数据

- `lpop key`移除指定数组的第一个元素

- `rpop key`移除指定数组的最后一个元素

- `lrem key count element`移除数组中指定的元素

- `ltrim key start stop`通过下标截取指定长度，执行后，该list只剩下被截取的部分。

- `rpoplpush source destination`移除列表的最后一个元素，将其移动到新的数组中。

- `lset key index element`更新指定下标元素中的数据。

- `linsert key BEFORE|AFTER pivot element`将某个具体的value插入到列表中某个元素的后面或者前面

## 小结

- redis中的list实际上是一个链表，before Node after，left，right都可以插入。

- 如果key不存在，将创建新的链表。

- 如果key存在，新增内容。

- 如果移除了所有值，空链表，也代表不存在。

- 在两边插入或者改动值，效率最高。中间插入或改动运输，相对来说效率较低。

---

# Set（集合）类型

集合（set）类型也是用来保存多个的字符串元素，集合是通过 hashtable 实现的。 但和列表类型不一样的是，集合中不允许有重复元素，并且集合中的元素是无序的，不能通过索引下标获取元素。利用 Set 的交集、并集、差集等操作，可以计算共同喜好，全部的喜好，自己独有的喜好等功能。

- `sadd key member [member ...]`往集合中添加元素，如果集合不存在则创建集合。

- `smembers key`遍历集合

- `sismember key member`判断某个元素是否存在于集合中

- `scard key`获取集合中元素个数

- `srem key member [member ...]`移除集合中指定的元素。

- `srandmember key [count]`随机获取Set集合中的值。

- `spop key [count]`随机删除set集合中的元素。

- `smove source destination member`移动指定元素到另一集合中。

- `sdiff key [key ...]`查看集合间的差集，即不共有的元素。

- `sinter key [key ...]`查看集合间的交集，即共有的元素。

- `sunion key [key ...]`查看集合间的并集，即集合间所有的元素。

---

# Hash类型

在Redis中，哈希类型是指键值本身又是一个键值对结构，哈希可以用来存放用户信息，比如实现购物车。

![](https://img-blog.csdnimg.cn/20210129195151621.png)

- `hmset key field value [field value ...]`往指定的hash中添加元素，如果该hash不存在则创建hash。

- `hmget key field [field ...]`获取hash集合中指定key的元素。

- `hgetall key`获取hash中所有的k/v。

- `hdel key field [field ...]`删除hash中指定的键。

- `hlen key`获取键值对个数。

- `hexists key field`判断hash指定key是否存在。

- `hkeys key`获取所有的key。

- `hvals key`获取所有的value。

- `hincrby key field increment`增量运算。

- `hsetnx key field value`该字段**不存在**则增加字段。

---

# Zset有序集合

：Sorted Set 多了一个权重参数 Score，集合中的元素能够按 Score 进行排列。实现方式：Redis Sorted Set 的内部使用 HashMap 和跳跃表（skipList）来保证数据的存储和有序，HashMap 里放的是成员到 Score 的映射。

- `zadd key [NX|XX] [CH] [INCR] score member [score member ...]`添加元素

- `zrange key start stop [WITHSCORES]`升序

- `zrevrange key start stop [WITHSCORES]`降序

- `zrangebyscore key min max [WITHSCORES] [LIMIT offset count]`获取所有元素（包括score）

- `zcard key`获取zset长度

- `zcount key min max`获取score指定区间的元素个数

- `zrem key member [member ...]`移除指定元素。
, firstPicture=https://note.youdao.com/yws/api/personal/file/F2E7621E7031434BBA8413D840C70F94?method=download&shareKey=475b1bba037f6d72505ea3e3af02ce07, flag=, views=null, commentCount=null, appreciation=false, shareStatement=true, commentabled=true, published=true, recommend=true, createTime=null, updateTime=null, typeId=60, userId=null, description=Redis五大类型常用命令, type=Type(id=60, name=null, blogs=[]), user=null, comments=[]), org.apache.catalina.session.StandardSessionFacade@8b1594, {}])
2021-03-29 17:09:46.395  WARN 13684 --- [http-nio-8080-exec-5] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/myblog?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8, version : 1.2.4, lastPacketReceivedIdleMillis : 599685
2021-03-29 17:09:46.632  INFO 13684 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Result: redirect:/admin/blogs
2021-03-29 17:09:46.652  INFO 13684 --- [http-nio-8080-exec-9] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getBlogs, args=[1, {}])
2021-03-29 17:09:46.661  INFO 13684 --- [http-nio-8080-exec-9] com.ljx.blog.config.LogConfig            : Result: admin/blogs
2021-03-29 17:09:50.113  INFO 13684 --- [http-nio-8080-exec-2] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/6/input, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getUpdateBlog, args=[6, {}])
2021-03-29 17:09:50.118  INFO 13684 --- [http-nio-8080-exec-2] com.ljx.blog.config.LogConfig            : Result: admin/blogs-input
2021-03-29 17:10:06.590  INFO 13684 --- [http-nio-8080-exec-4] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/6/input, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getUpdateBlog, args=[6, {}])
2021-03-29 17:10:06.600  INFO 13684 --- [http-nio-8080-exec-4] com.ljx.blog.config.LogConfig            : Result: admin/blogs-input
2021-03-29 17:13:18.715  INFO 13684 --- [Thread-14] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2021-03-29 17:13:18.721  INFO 13684 --- [Thread-14] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closing ...
2021-03-29 17:13:18.724  INFO 13684 --- [Thread-14] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2021-03-29 17:13:19.081  INFO 13684 --- [restartedMain] com.ljx.blog.BlogApplication             : Starting BlogApplication using Java 1.8.0_271 on W10-20201212464 with PID 13684 (D:\UserData\Desktop\project\get-projiect\blog\target\classes started by Lin in D:\UserData\Desktop\project\get-projiect\blog)
2021-03-29 17:13:19.081  INFO 13684 --- [restartedMain] com.ljx.blog.BlogApplication             : The following profiles are active: dev
2021-03-29 17:13:19.661  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration$$EnhancerBySpringCGLIB$$99fd5c38] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:19.661  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration$$EnhancerBySpringCGLIB$$9c909add] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:19.681  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'shiroConfig' of type [com.ljx.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$bd80699f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:19.701  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:19.707  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$b9b8cfb8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:19.710  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$a09073fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:19.711  INFO 13684 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-03-29 17:13:19.721  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:19.725  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:19.730  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:19.831  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'wallConfig' of type [com.alibaba.druid.wall.WallConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:19.841  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'wallFilter' of type [com.alibaba.druid.wall.WallFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:19.911  INFO 13684 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2021-03-29 17:13:19.911  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:19.952  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:20.000  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:20.002  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:20.007  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:20.009  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userDao' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:20.010  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userServiceImpl' of type [com.ljx.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:20.011  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'getRealm' of type [com.ljx.blog.config.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:20.019  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'defaultWebSecurityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:20.028  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:20.033  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'eventBus' of type [org.apache.shiro.event.support.DefaultEventBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:20.158  INFO 13684 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-03-29 17:13:20.158  INFO 13684 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-03-29 17:13:20.159  INFO 13684 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.43]
2021-03-29 17:13:20.171  INFO 13684 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-03-29 17:13:20.171  INFO 13684 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1083 ms
2021-03-29 17:13:20.965  INFO 13684 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-03-29 17:13:21.025  INFO 13684 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-03-29 17:13:21.061  INFO 13684 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-03-29 17:13:21.651  INFO 13684 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-03-29 17:13:21.991  INFO 13684 --- [restartedMain] com.ljx.blog.BlogApplication             : Started BlogApplication in 2.958 seconds (JVM running for 902.167)
2021-03-29 17:13:22.000  INFO 13684 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2021-03-29 17:13:24.060  INFO 13684 --- [Thread-24] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2021-03-29 17:13:24.062  INFO 13684 --- [Thread-24] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} closing ...
2021-03-29 17:13:24.063  INFO 13684 --- [Thread-24] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} closed
2021-03-29 17:13:24.310  INFO 13684 --- [restartedMain] com.ljx.blog.BlogApplication             : Starting BlogApplication using Java 1.8.0_271 on W10-20201212464 with PID 13684 (D:\UserData\Desktop\project\get-projiect\blog\target\classes started by Lin in D:\UserData\Desktop\project\get-projiect\blog)
2021-03-29 17:13:24.311  INFO 13684 --- [restartedMain] com.ljx.blog.BlogApplication             : The following profiles are active: dev
2021-03-29 17:13:24.723  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration$$EnhancerBySpringCGLIB$$99fd5c38] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:24.723  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration$$EnhancerBySpringCGLIB$$9c909add] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:24.741  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'shiroConfig' of type [com.ljx.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$bd80699f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:24.761  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:24.765  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$b9b8cfb8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:24.768  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$a09073fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:24.769  INFO 13684 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-03-29 17:13:24.775  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:24.778  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:24.782  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:24.880  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'wallConfig' of type [com.alibaba.druid.wall.WallConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:24.891  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'wallFilter' of type [com.alibaba.druid.wall.WallFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:24.957  INFO 13684 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} inited
2021-03-29 17:13:24.957  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:24.992  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:25.038  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:25.041  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:25.045  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:25.047  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userDao' of type [com.sun.proxy.$Proxy128] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:25.049  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userServiceImpl' of type [com.ljx.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:25.049  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'getRealm' of type [com.ljx.blog.config.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:25.058  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'defaultWebSecurityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:25.067  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:25.074  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'eventBus' of type [org.apache.shiro.event.support.DefaultEventBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:13:25.230  INFO 13684 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-03-29 17:13:25.230  INFO 13684 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-03-29 17:13:25.230  INFO 13684 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.43]
2021-03-29 17:13:25.249  INFO 13684 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-03-29 17:13:25.249  INFO 13684 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 935 ms
2021-03-29 17:13:26.024  INFO 13684 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-03-29 17:13:26.083  INFO 13684 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-03-29 17:13:26.112  INFO 13684 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-03-29 17:13:26.502  INFO 13684 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-03-29 17:13:26.587  INFO 13684 --- [restartedMain] com.ljx.blog.BlogApplication             : Started BlogApplication in 2.321 seconds (JVM running for 906.763)
2021-03-29 17:13:26.589  INFO 13684 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2021-03-29 17:16:11.615  INFO 13684 --- [Thread-29] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2021-03-29 17:16:11.617  INFO 13684 --- [Thread-29] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} closing ...
2021-03-29 17:16:11.617  INFO 13684 --- [Thread-29] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} closed
2021-03-29 17:16:11.863  INFO 13684 --- [restartedMain] com.ljx.blog.BlogApplication             : Starting BlogApplication using Java 1.8.0_271 on W10-20201212464 with PID 13684 (D:\UserData\Desktop\project\get-projiect\blog\target\classes started by Lin in D:\UserData\Desktop\project\get-projiect\blog)
2021-03-29 17:16:11.863  INFO 13684 --- [restartedMain] com.ljx.blog.BlogApplication             : The following profiles are active: dev
2021-03-29 17:16:12.227  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration$$EnhancerBySpringCGLIB$$99fd5c38] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:12.228  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration$$EnhancerBySpringCGLIB$$9c909add] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:12.247  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'shiroConfig' of type [com.ljx.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$bd80699f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:12.263  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:12.268  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$b9b8cfb8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:12.272  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$a09073fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:12.273  INFO 13684 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-03-29 17:16:12.284  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:12.290  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:12.296  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:12.401  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'wallConfig' of type [com.alibaba.druid.wall.WallConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:12.413  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'wallFilter' of type [com.alibaba.druid.wall.WallFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:12.486  INFO 13684 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-4} inited
2021-03-29 17:16:12.486  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:12.731  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:12.820  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:12.827  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:12.845  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:12.850  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userDao' of type [com.sun.proxy.$Proxy136] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:12.853  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userServiceImpl' of type [com.ljx.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:12.853  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'getRealm' of type [com.ljx.blog.config.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:12.870  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'defaultWebSecurityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:12.916  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:12.933  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'eventBus' of type [org.apache.shiro.event.support.DefaultEventBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:13.467  INFO 13684 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-03-29 17:16:13.468  INFO 13684 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-03-29 17:16:13.468  INFO 13684 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.43]
2021-03-29 17:16:13.526  INFO 13684 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-03-29 17:16:13.526  INFO 13684 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1661 ms
2021-03-29 17:16:14.568  INFO 13684 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-03-29 17:16:14.611  INFO 13684 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-03-29 17:16:14.633  INFO 13684 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-03-29 17:16:14.950  INFO 13684 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-03-29 17:16:15.035  INFO 13684 --- [restartedMain] com.ljx.blog.BlogApplication             : Started BlogApplication in 3.202 seconds (JVM running for 1075.211)
2021-03-29 17:16:15.036  INFO 13684 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2021-03-29 17:16:17.008  INFO 13684 --- [Thread-34] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2021-03-29 17:16:17.009  INFO 13684 --- [Thread-34] com.alibaba.druid.pool.DruidDataSource   : {dataSource-4} closing ...
2021-03-29 17:16:17.010  INFO 13684 --- [Thread-34] com.alibaba.druid.pool.DruidDataSource   : {dataSource-4} closed
2021-03-29 17:16:17.176  INFO 13684 --- [restartedMain] com.ljx.blog.BlogApplication             : Starting BlogApplication using Java 1.8.0_271 on W10-20201212464 with PID 13684 (D:\UserData\Desktop\project\get-projiect\blog\target\classes started by Lin in D:\UserData\Desktop\project\get-projiect\blog)
2021-03-29 17:16:17.177  INFO 13684 --- [restartedMain] com.ljx.blog.BlogApplication             : The following profiles are active: dev
2021-03-29 17:16:17.494  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration$$EnhancerBySpringCGLIB$$99fd5c38] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:17.495  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration$$EnhancerBySpringCGLIB$$9c909add] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:17.511  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'shiroConfig' of type [com.ljx.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$bd80699f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:17.525  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:17.528  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$b9b8cfb8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:17.531  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$a09073fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:17.532  INFO 13684 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-03-29 17:16:17.537  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:17.539  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:17.543  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:17.628  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'wallConfig' of type [com.alibaba.druid.wall.WallConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:17.641  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'wallFilter' of type [com.alibaba.druid.wall.WallFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:17.705  INFO 13684 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-5} inited
2021-03-29 17:16:17.705  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:17.747  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:17.798  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:17.801  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:17.805  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:17.808  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userDao' of type [com.sun.proxy.$Proxy144] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:17.810  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userServiceImpl' of type [com.ljx.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:17.811  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'getRealm' of type [com.ljx.blog.config.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:17.821  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'defaultWebSecurityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:17.834  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:17.840  INFO 13684 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'eventBus' of type [org.apache.shiro.event.support.DefaultEventBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 17:16:17.961  INFO 13684 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-03-29 17:16:17.962  INFO 13684 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-03-29 17:16:17.962  INFO 13684 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.43]
2021-03-29 17:16:17.973  INFO 13684 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-03-29 17:16:17.973  INFO 13684 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 794 ms
2021-03-29 17:16:18.688  INFO 13684 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-03-29 17:16:18.731  INFO 13684 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-03-29 17:16:18.752  INFO 13684 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-03-29 17:16:19.071  INFO 13684 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-03-29 17:16:19.158  INFO 13684 --- [restartedMain] com.ljx.blog.BlogApplication             : Started BlogApplication in 2.013 seconds (JVM running for 1079.333)
2021-03-29 17:16:19.160  INFO 13684 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2021-03-29 17:22:57.013  INFO 13684 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2021-03-29 17:22:57.016  INFO 13684 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-5} closing ...
2021-03-29 17:22:57.016  INFO 13684 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-5} closed
2021-03-29 22:12:27.076  INFO 19324 --- [restartedMain] com.ljx.blog.BlogApplication             : Starting BlogApplication using Java 1.8.0_271 on W10-20201212464 with PID 19324 (D:\UserData\Desktop\project\get-projiect\blog\target\classes started by Lin in D:\UserData\Desktop\project\get-projiect\blog)
2021-03-29 22:12:27.096  INFO 19324 --- [restartedMain] com.ljx.blog.BlogApplication             : The following profiles are active: dev
2021-03-29 22:12:27.286  INFO 19324 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-03-29 22:12:27.287  INFO 19324 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2021-03-29 22:12:28.977  INFO 19324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroBeanAutoConfiguration$$EnhancerBySpringCGLIB$$7fa0600b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 22:12:28.988  INFO 19324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration' of type [org.apache.shiro.spring.boot.autoconfigure.ShiroAnnotationProcessorAutoConfiguration$$EnhancerBySpringCGLIB$$82339eb0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 22:12:29.337  INFO 19324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'shiroConfig' of type [com.ljx.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$a3236d72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 22:12:29.454  INFO 19324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 22:12:29.462  INFO 19324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$9f5bd38b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 22:12:29.468  INFO 19324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$863377cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 22:12:29.471  INFO 19324 --- [restartedMain] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-03-29 22:12:29.529  INFO 19324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 22:12:29.537  INFO 19324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 22:12:29.576  INFO 19324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 22:12:29.696  INFO 19324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'wallConfig' of type [com.alibaba.druid.wall.WallConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 22:12:29.709  INFO 19324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'wallFilter' of type [com.alibaba.druid.wall.WallFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 22:12:29.845  INFO 19324 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-03-29 22:12:29.845  INFO 19324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 22:12:29.885  INFO 19324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 22:12:30.135  INFO 19324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 22:12:30.141  INFO 19324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 22:12:30.146  INFO 19324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 22:12:30.149  INFO 19324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userDao' of type [com.sun.proxy.$Proxy80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 22:12:30.157  INFO 19324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'userServiceImpl' of type [com.ljx.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 22:12:30.157  INFO 19324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'getRealm' of type [com.ljx.blog.config.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 22:12:30.819  INFO 19324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'defaultWebSecurityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 22:12:30.836  INFO 19324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 22:12:30.849  INFO 19324 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'eventBus' of type [org.apache.shiro.event.support.DefaultEventBus] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-29 22:12:31.578  INFO 19324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2021-03-29 22:12:31.598  INFO 19324 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-03-29 22:12:31.598  INFO 19324 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.43]
2021-03-29 22:12:31.688  INFO 19324 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-03-29 22:12:31.688  INFO 19324 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4400 ms
2021-03-29 22:12:32.734  INFO 19324 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-03-29 22:12:32.803  INFO 19324 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2021-03-29 22:12:32.845  INFO 19324 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-03-29 22:12:33.410  INFO 19324 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2021-03-29 22:12:33.714  INFO 19324 --- [restartedMain] com.ljx.blog.BlogApplication             : Started BlogApplication in 7.695 seconds (JVM running for 10.903)
2021-03-29 22:16:52.961  INFO 19324 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-03-29 22:16:52.962  INFO 19324 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-03-29 22:16:52.964  INFO 19324 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2021-03-29 22:16:53.021  INFO 19324 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.IndexController.index, args=[])
2021-03-29 22:16:53.026  INFO 19324 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Result: index
2021-03-29 22:16:59.578  INFO 19324 --- [http-nio-8080-exec-7] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.UserController.getLogin, args=[])
2021-03-29 22:16:59.580  INFO 19324 --- [http-nio-8080-exec-7] com.ljx.blog.config.LogConfig            : Result: admin/login
2021-03-29 22:17:09.996  INFO 19324 --- [http-nio-8080-exec-6] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/login, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.UserController.login, args=[linjx, 1111, {}])
2021-03-29 22:17:11.010  INFO 19324 --- [http-nio-8080-exec-6] com.ljx.blog.config.LogConfig            : Result: admin/index
2021-03-29 22:17:14.988  INFO 19324 --- [http-nio-8080-exec-7] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/login, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.UserController.login, args=[linjx, 1111, {}])
2021-03-29 22:17:14.990  INFO 19324 --- [http-nio-8080-exec-7] com.ljx.blog.config.LogConfig            : Result: admin/index
2021-03-29 22:17:16.959  INFO 19324 --- [http-nio-8080-exec-10] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getBlogs, args=[1, {}])
2021-03-29 22:17:17.063  INFO 19324 --- [http-nio-8080-exec-10] com.ljx.blog.config.LogConfig            : Result: admin/blogs
2021-03-29 22:17:21.264  INFO 19324 --- [http-nio-8080-exec-2] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/search, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.searchBlog, args=[SearchBlog(title=, typeId=34), {searchBlog=SearchBlog(title=, typeId=34), org.springframework.validation.BindingResult.searchBlog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, 1])
2021-03-29 22:17:21.286  INFO 19324 --- [http-nio-8080-exec-2] com.ljx.blog.config.LogConfig            : Result: admin/blogs :: blogList
2021-03-29 22:17:23.998  INFO 19324 --- [http-nio-8080-exec-6] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/search, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.searchBlog, args=[SearchBlog(title=, typeId=36), {searchBlog=SearchBlog(title=, typeId=36), org.springframework.validation.BindingResult.searchBlog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, 1])
2021-03-29 22:17:24.000  INFO 19324 --- [http-nio-8080-exec-6] com.ljx.blog.config.LogConfig            : Result: admin/blogs :: blogList
2021-03-29 22:17:25.054  INFO 19324 --- [http-nio-8080-exec-3] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/search, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.searchBlog, args=[SearchBlog(title=, typeId=36), {searchBlog=SearchBlog(title=, typeId=36), org.springframework.validation.BindingResult.searchBlog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, 1])
2021-03-29 22:17:25.057  INFO 19324 --- [http-nio-8080-exec-3] com.ljx.blog.config.LogConfig            : Result: admin/blogs :: blogList
2021-03-29 22:17:25.279  INFO 19324 --- [http-nio-8080-exec-8] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/search, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.searchBlog, args=[SearchBlog(title=, typeId=36), {searchBlog=SearchBlog(title=, typeId=36), org.springframework.validation.BindingResult.searchBlog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, 1])
2021-03-29 22:17:25.281  INFO 19324 --- [http-nio-8080-exec-8] com.ljx.blog.config.LogConfig            : Result: admin/blogs :: blogList
2021-03-29 22:17:25.680  INFO 19324 --- [http-nio-8080-exec-10] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/search, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.searchBlog, args=[SearchBlog(title=, typeId=36), {searchBlog=SearchBlog(title=, typeId=36), org.springframework.validation.BindingResult.searchBlog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, 1])
2021-03-29 22:17:25.682  INFO 19324 --- [http-nio-8080-exec-10] com.ljx.blog.config.LogConfig            : Result: admin/blogs :: blogList
2021-03-29 22:17:28.568  INFO 19324 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/search, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.searchBlog, args=[SearchBlog(title=, typeId=3), {searchBlog=SearchBlog(title=, typeId=3), org.springframework.validation.BindingResult.searchBlog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, 1])
2021-03-29 22:17:28.572  INFO 19324 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Result: admin/blogs :: blogList
2021-03-29 22:17:28.796  INFO 19324 --- [http-nio-8080-exec-9] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/search, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.searchBlog, args=[SearchBlog(title=, typeId=3), {searchBlog=SearchBlog(title=, typeId=3), org.springframework.validation.BindingResult.searchBlog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, 1])
2021-03-29 22:17:28.799  INFO 19324 --- [http-nio-8080-exec-9] com.ljx.blog.config.LogConfig            : Result: admin/blogs :: blogList
2021-03-29 22:17:33.462  INFO 19324 --- [http-nio-8080-exec-7] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/search, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.searchBlog, args=[SearchBlog(title=, typeId=58), {searchBlog=SearchBlog(title=, typeId=58), org.springframework.validation.BindingResult.searchBlog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, 1])
2021-03-29 22:17:33.464  INFO 19324 --- [http-nio-8080-exec-7] com.ljx.blog.config.LogConfig            : Result: admin/blogs :: blogList
2021-03-29 22:17:36.380  INFO 19324 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/search, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.searchBlog, args=[SearchBlog(title=, typeId=60), {searchBlog=SearchBlog(title=, typeId=60), org.springframework.validation.BindingResult.searchBlog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, 1])
2021-03-29 22:17:36.383  INFO 19324 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Result: admin/blogs :: blogList
2021-03-29 22:18:47.981  INFO 19324 --- [http-nio-8080-exec-6] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getBlogs, args=[1, {}])
2021-03-29 22:18:47.996  WARN 19324 --- [http-nio-8080-exec-6] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/myblog?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8, version : 1.2.4, lastPacketReceivedIdleMillis : 71602
2021-03-29 22:18:48.044  INFO 19324 --- [http-nio-8080-exec-6] com.ljx.blog.config.LogConfig            : Result: admin/blogs
2021-03-29 22:19:01.639  INFO 19324 --- [http-nio-8080-exec-9] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/search, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.searchBlog, args=[SearchBlog(title=命令, typeId=null), {searchBlog=SearchBlog(title=命令, typeId=null), org.springframework.validation.BindingResult.searchBlog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, 1])
2021-03-29 22:19:01.647  INFO 19324 --- [http-nio-8080-exec-9] com.ljx.blog.config.LogConfig            : Result: admin/blogs :: blogList
2021-03-29 22:19:08.546  INFO 19324 --- [http-nio-8080-exec-7] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/search, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.searchBlog, args=[SearchBlog(title=, typeId=null), {searchBlog=SearchBlog(title=, typeId=null), org.springframework.validation.BindingResult.searchBlog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, 1])
2021-03-29 22:19:08.556  INFO 19324 --- [http-nio-8080-exec-7] com.ljx.blog.config.LogConfig            : Result: admin/blogs :: blogList
2021-03-29 22:19:17.522  INFO 19324 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/4/input, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getUpdateBlog, args=[4, {}])
2021-03-29 22:19:17.623 ERROR 19324 --- [http-nio-8080-exec-5] c.l.b.h.ControllerExceptionHandler       : Request url : /admin/blogs/4/input, Exception : {}

org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? 
### The error may exist in file [D:\UserData\Desktop\project\get-projiect\blog\target\classes\Mapper\BlogDao.xml]
### The error may involve com.ljx.blog.dao.BlogDao.getBlogById
### The error occurred while executing a query
### SQL: select b.id,b.flag,b.title,b.content,b.type_id,         b.first_picture,b.description,b.recommend,b.published,b.share_statement,         b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;  LIMIT ?
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? 
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? ; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? 
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy79.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy87.getBlogById(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy88.getBlogById(Unknown Source)
	at com.ljx.blog.service.impl.BlogServiceImpl.getBlogById(BlogServiceImpl.java:31)
	at com.ljx.blog.controller.admin.BlogController.getUpdateBlog(BlogController.java:96)
	at com.ljx.blog.controller.admin.BlogController$$FastClassBySpringCGLIB$$977242c4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.ljx.blog.controller.admin.BlogController$$EnhancerBySpringCGLIB$$a2c6ab4b.getUpdateBlog(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:887)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1684)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? 
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:849)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:292)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:209)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:107)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy119.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 99 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:558)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:602)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:826)
	... 126 common frames omitted

2021-03-29 22:19:17.624  WARN 19324 --- [http-nio-8080-exec-5] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? 
### The error may exist in file [D:\UserData\Desktop\project\get-projiect\blog\target\classes\Mapper\BlogDao.xml]
### The error may involve com.ljx.blog.dao.BlogDao.getBlogById
### The error occurred while executing a query
### SQL: select b.id,b.flag,b.title,b.content,b.type_id,         b.first_picture,b.description,b.recommend,b.published,b.share_statement,         b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;  LIMIT ?
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? 
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? ; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? ]
2021-03-29 22:19:45.542  INFO 19324 --- [http-nio-8080-exec-10] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getBlogs, args=[1, {}])
2021-03-29 22:19:45.553  INFO 19324 --- [http-nio-8080-exec-10] com.ljx.blog.config.LogConfig            : Result: admin/blogs
2021-03-29 22:19:47.163  INFO 19324 --- [http-nio-8080-exec-2] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/6/input, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getUpdateBlog, args=[6, {}])
2021-03-29 22:19:47.170 ERROR 19324 --- [http-nio-8080-exec-2] c.l.b.h.ControllerExceptionHandler       : Request url : /admin/blogs/6/input, Exception : {}

org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? 
### The error may exist in file [D:\UserData\Desktop\project\get-projiect\blog\target\classes\Mapper\BlogDao.xml]
### The error may involve com.ljx.blog.dao.BlogDao.getBlogById
### The error occurred while executing a query
### SQL: select b.id,b.flag,b.title,b.content,b.type_id,         b.first_picture,b.description,b.recommend,b.published,b.share_statement,         b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;  LIMIT ?
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? 
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? ; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? 
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy79.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy87.getBlogById(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy88.getBlogById(Unknown Source)
	at com.ljx.blog.service.impl.BlogServiceImpl.getBlogById(BlogServiceImpl.java:31)
	at com.ljx.blog.controller.admin.BlogController.getUpdateBlog(BlogController.java:96)
	at com.ljx.blog.controller.admin.BlogController$$FastClassBySpringCGLIB$$977242c4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.ljx.blog.controller.admin.BlogController$$EnhancerBySpringCGLIB$$a2c6ab4b.getUpdateBlog(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:887)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1684)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? 
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:849)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:292)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:209)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:107)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy119.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 99 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:558)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:602)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:826)
	... 126 common frames omitted

2021-03-29 22:19:47.171  WARN 19324 --- [http-nio-8080-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? 
### The error may exist in file [D:\UserData\Desktop\project\get-projiect\blog\target\classes\Mapper\BlogDao.xml]
### The error may involve com.ljx.blog.dao.BlogDao.getBlogById
### The error occurred while executing a query
### SQL: select b.id,b.flag,b.title,b.content,b.type_id,         b.first_picture,b.description,b.recommend,b.published,b.share_statement,         b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;  LIMIT ?
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? 
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? ; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? ]
2021-03-29 22:19:49.425  INFO 19324 --- [http-nio-8080-exec-9] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.IndexController.index, args=[])
2021-03-29 22:19:49.426  INFO 19324 --- [http-nio-8080-exec-9] com.ljx.blog.config.LogConfig            : Result: index
2021-03-29 22:19:54.642  INFO 19324 --- [http-nio-8080-exec-2] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/5/input, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getUpdateBlog, args=[5, {}])
2021-03-29 22:19:54.648  INFO 19324 --- [http-nio-8080-exec-2] com.ljx.blog.config.LogConfig            : Result: admin/blogs-input
2021-03-29 22:19:58.032  INFO 19324 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/3/input, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getUpdateBlog, args=[3, {}])
2021-03-29 22:19:58.039 ERROR 19324 --- [http-nio-8080-exec-1] c.l.b.h.ControllerExceptionHandler       : Request url : /admin/blogs/3/input, Exception : {}

org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? 
### The error may exist in file [D:\UserData\Desktop\project\get-projiect\blog\target\classes\Mapper\BlogDao.xml]
### The error may involve com.ljx.blog.dao.BlogDao.getBlogById
### The error occurred while executing a query
### SQL: select b.id,b.flag,b.title,b.content,b.type_id,         b.first_picture,b.description,b.recommend,b.published,b.share_statement,         b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;  LIMIT ?
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? 
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? ; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? 
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy79.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy87.getBlogById(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy88.getBlogById(Unknown Source)
	at com.ljx.blog.service.impl.BlogServiceImpl.getBlogById(BlogServiceImpl.java:31)
	at com.ljx.blog.controller.admin.BlogController.getUpdateBlog(BlogController.java:96)
	at com.ljx.blog.controller.admin.BlogController$$FastClassBySpringCGLIB$$977242c4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.ljx.blog.controller.admin.BlogController$$EnhancerBySpringCGLIB$$a2c6ab4b.getUpdateBlog(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:887)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1684)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? 
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:849)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:292)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:209)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:107)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy119.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 99 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:558)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:602)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:826)
	... 126 common frames omitted

2021-03-29 22:19:58.039  WARN 19324 --- [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? 
### The error may exist in file [D:\UserData\Desktop\project\get-projiect\blog\target\classes\Mapper\BlogDao.xml]
### The error may involve com.ljx.blog.dao.BlogDao.getBlogById
### The error occurred while executing a query
### SQL: select b.id,b.flag,b.title,b.content,b.type_id,         b.first_picture,b.description,b.recommend,b.published,b.share_statement,         b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;  LIMIT ?
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? 
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? ; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? ]
2021-03-29 22:20:01.062  INFO 19324 --- [http-nio-8080-exec-8] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/4/input, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getUpdateBlog, args=[4, {}])
2021-03-29 22:20:01.067 ERROR 19324 --- [http-nio-8080-exec-8] c.l.b.h.ControllerExceptionHandler       : Request url : /admin/blogs/4/input, Exception : {}

org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? 
### The error may exist in file [D:\UserData\Desktop\project\get-projiect\blog\target\classes\Mapper\BlogDao.xml]
### The error may involve com.ljx.blog.dao.BlogDao.getBlogById
### The error occurred while executing a query
### SQL: select b.id,b.flag,b.title,b.content,b.type_id,         b.first_picture,b.description,b.recommend,b.published,b.share_statement,         b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;  LIMIT ?
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? 
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? ; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? 
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy79.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy87.getBlogById(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy88.getBlogById(Unknown Source)
	at com.ljx.blog.service.impl.BlogServiceImpl.getBlogById(BlogServiceImpl.java:31)
	at com.ljx.blog.controller.admin.BlogController.getUpdateBlog(BlogController.java:96)
	at com.ljx.blog.controller.admin.BlogController$$FastClassBySpringCGLIB$$977242c4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.ljx.blog.controller.admin.BlogController$$EnhancerBySpringCGLIB$$a2c6ab4b.getUpdateBlog(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:887)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1684)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? 
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:849)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:292)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:351)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:87)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.util.ExecutorUtil.pageQuery(ExecutorUtil.java:209)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:107)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy119.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 99 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:558)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:602)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:124)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:629)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:583)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:826)
	... 126 common frames omitted

2021-03-29 22:20:01.068  WARN 19324 --- [http-nio-8080-exec-8] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? 
### The error may exist in file [D:\UserData\Desktop\project\get-projiect\blog\target\classes\Mapper\BlogDao.xml]
### The error may involve com.ljx.blog.dao.BlogDao.getBlogById
### The error occurred while executing a query
### SQL: select b.id,b.flag,b.title,b.content,b.type_id,         b.first_picture,b.description,b.recommend,b.published,b.share_statement,         b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;  LIMIT ?
### Cause: java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? 
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? ; nested exception is java.sql.SQLException: sql injection violation, dbType mysql, , druid-version 1.2.4, syntax error: syntax error, error in :' ?;
 LIMIT ? , pos 212, line 4, column 3, token LIMIT : select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = ?;
 LIMIT ? ]
2021-03-29 22:20:03.641  INFO 19324 --- [http-nio-8080-exec-4] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/1/input, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getUpdateBlog, args=[1, {}])
2021-03-29 22:20:03.645  INFO 19324 --- [http-nio-8080-exec-4] com.ljx.blog.config.LogConfig            : Result: admin/blogs-input
2021-03-29 22:20:46.221  INFO 19324 --- [http-nio-8080-exec-7] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.IndexController.index, args=[])
2021-03-29 22:20:46.221  INFO 19324 --- [http-nio-8080-exec-7] com.ljx.blog.config.LogConfig            : Result: index
2021-03-29 22:20:54.143  INFO 19324 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.UserController.getLogin, args=[])
2021-03-29 22:20:54.143  INFO 19324 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Result: admin/login
2021-03-29 22:21:06.973  INFO 19324 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/login, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.UserController.login, args=[linjx, 1111, {}])
2021-03-29 22:21:06.975  WARN 19324 --- [http-nio-8080-exec-5] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/myblog?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8, version : 1.2.4, lastPacketReceivedIdleMillis : 63330
2021-03-29 22:21:07.010  INFO 19324 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Result: admin/index
2021-03-29 22:21:08.819  INFO 19324 --- [http-nio-8080-exec-9] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getBlogs, args=[1, {}])
2021-03-29 22:21:08.832  INFO 19324 --- [http-nio-8080-exec-9] com.ljx.blog.config.LogConfig            : Result: admin/blogs
2021-03-29 22:21:11.060  INFO 19324 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/3/input, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getUpdateBlog, args=[3, {}])
2021-03-29 22:21:11.068  INFO 19324 --- [http-nio-8080-exec-1] com.ljx.blog.config.LogConfig            : Result: admin/blogs-input
2021-03-29 22:21:15.154  INFO 19324 --- [http-nio-8080-exec-10] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/4/input, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getUpdateBlog, args=[4, {}])
2021-03-29 22:21:15.159  INFO 19324 --- [http-nio-8080-exec-10] com.ljx.blog.config.LogConfig            : Result: admin/blogs-input
2021-03-29 22:21:20.246  INFO 19324 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs/4/delete, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.deleteBlog, args=[4, {}])
2021-03-29 22:21:20.275  INFO 19324 --- [http-nio-8080-exec-5] com.ljx.blog.config.LogConfig            : Result: redirect:/admin/blogs
2021-03-29 22:21:20.304  INFO 19324 --- [http-nio-8080-exec-7] com.ljx.blog.config.LogConfig            : Request: LogConfig.RequestLog(url=http://localhost:8080/admin/blogs, ip=0:0:0:0:0:0:0:1, classMethod=com.ljx.blog.controller.admin.BlogController.getBlogs, args=[1, {message=删除成功}])
2021-03-29 22:21:20.311  INFO 19324 --- [http-nio-8080-exec-7] com.ljx.blog.config.LogConfig            : Result: admin/blogs
2021-03-29 22:21:32.121  INFO 19324 --- [SpringContextShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2021-03-29 22:21:32.126  INFO 19324 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closing ...
2021-03-29 22:21:32.129  INFO 19324 --- [SpringContextShutdownHook] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
